{"version":3,"sources":["routes/Routes.js","routes/OfficerRoutes.js","containers/TheContent.js","containers/TheFooter.js","containers/TheHeader.js","containers/TheHeaderDropdown.js","containers/TheSidebar.js","components/swipe/CardSwipped.js","containers/TheLayout.js"],"names":["routes","path","exact","name","component","React","lazy","officer_routes","loading","className","TheContent","useState","approutes","setRoutes","useEffect","localStorage","getItem","class","fallback","map","route","idx","render","props","from","to","memo","TheFooter","fixed","href","target","rel","TheHeader","dispatch","useDispatch","sidebarShow","useSelector","state","sidebar","console","log","withSubheader","inHeader","onClick","val","includes","changeState","TheHeaderDropdown","full_name","user","data","first_name","last_name","profile_pic","history","useHistory","inNav","direction","caret","src","BASE_URL","alt","style","marginLeft","placement","header","tag","color","API","get","then","response","status","success","clear","resetUser","push","catch","err","TheSidebar","show","group","setGroup","onShowChange","icon","AnyReactComponent","text","CardSwipped","user_data","setUserData","setLatLng","borderColor","borderStyle","setBorder","mood","setMood","PUBLIC_API","user_id","res","a","Number","lat","lng","id","height","width","shape","email","phone","registration","address","bootstrapURLKeys","key","defaultCenter","defaultZoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","maps","TheLayout","useSnackbar","enqueueSnackbar","closeSnackbar","web_socket","WebSocketBridge","fetchDetailsThunk","connect","addEventListener","event","type","officer_name","variant","fetchRatingsThunk","fetchDashboardData","fetchNotificationsThunk","badge_number","swal","content","buttons","TOKEN"],"mappings":"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","file":"static/js/13.9dfa5df5.chunk.js","sourcesContent":["import React from 'react';\r\nimport { ReactReduxContext } from 'react-redux';\r\n\r\nconst Dashboard = React.lazy(() => import('../components/dashboard/Dashboard'));\r\nconst Employees = React.lazy(()=> import('../components/employees/Employees'))\r\nconst routes = [\r\n  { path: '/dashboard', exact: true, name: 'Dashboard', component:Dashboard },\r\n  { path: '/dashboard/employees',exact: true, name: 'Employees', component: Employees },\r\n  { path: '/dashboard/employees/details',exact:true, name: 'Employee Details', component: React.lazy(()=>import('../components/employees/EmployeeDetails'))},\r\n  { path: '/dashboard/employees/create',exact:true, name: 'Create Employee', component: React.lazy(()=>import('../components/employees/Create'))},\r\n  { path: '/dashboard/badges/',exact:true, name: 'Badges', component: React.lazy(()=>import('../components/badges/Badges'))},\r\n  { path: '/dashboard/account/',exact:true, name: 'Account', component: React.lazy(()=>import('../components/account/Account'))},\r\n  {path:'/dashboard/contacts/',exact:true,name:'Contacts',component:React.lazy(()=> import ('../components/contacts/contacts'))},\r\n  {path:'/dashboard/billing/',exact:true,name:'Billing',component:React.lazy(()=> import ('../components/billing/Billing'))},\r\n  {path:'/dashboard/time',exact:true,name:'Time',component:React.lazy(()=>import('../components/time/Time'))},\r\n  {path:'/dashboard/sitecontrol',exact:true,name:'Site Control',component:React.lazy(()=>import('../components/sitecontrol/SiteControl'))},\r\n  {path:'/dashboard/scan-history',exact:true,name:'Scan History',component:React.lazy(() => import ('../components/scan-history/ScanHistory'))},\r\n  { path: '/dashboard/account/personal',exact:true, name: 'Officer Account', component: React.lazy(()=>import('../components/officerview/account/Account'))},\r\n];\r\n\r\nconst officer_routes=[\r\n  \r\n]\r\n\r\nexport default routes\r\n","import React from 'react';\r\nconst Dashboard = React.lazy(() => import('../components/officerview/officer-dashboard/OfficerDashboard'));\r\nconst officer_routes = [\r\n  { path: '/dashboard', exact: true, name: 'Dashboard', component:Dashboard },\r\n  { path: '/dashboard/account/personal',exact:true, name: 'Officer Account', component: React.lazy(()=>import('../components/officerview/account/Account'))},\r\n  { path: '/dashboard/account/badge',exact:true, name: 'Officer Account', component: React.lazy(()=>import('../components/officerview/my-badge/MyBadge'))},\r\n  { path: '/dashboard/account/time',exact:true, name: 'Officer Account', component: React.lazy(()=>import('../components/officerview/time/Time'))},\r\n  { path: '/dashboard/account/contacts',exact:true, name: 'Officer Account', component: React.lazy(()=>import('../components/officerview/contacts/Contacts'))},\r\n  { path: '/dashboard/officer/contacts/edit',exact:true, name: 'Edit Contact', component: React.lazy(()=>import('../components/officerview/contacts/Edit'))},\r\n];\r\n\r\nexport default officer_routes\r\n","import React, { Suspense, useState } from 'react';\r\nimport {\r\n  Redirect,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom';\r\nimport { CContainer, CFade } from '@coreui/react';\r\nimport './TheHeader.css'\r\n// routes config\r\nimport routes from '../routes/Routes';\r\nimport officer_routes from '../routes/OfficerRoutes'\r\n  \r\nconst loading = (\r\n  <div className=\"pt-3 text-center\">\r\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\r\n  </div>\r\n)\r\n\r\nconst TheContent = () => {\r\n  const [approutes,setRoutes] = useState([])\r\n  React.useEffect(()=>{\r\n    switch(localStorage.getItem('group')){\r\n      case 'admin':\r\n        setRoutes(routes)\r\n        break\r\n      case 'officer':\r\n        setRoutes(officer_routes)\r\n        break\r\n    }\r\n  },[])\r\n  return (\r\n    <main className=\"c-main\">\r\n      <div class=\"hero-image\">\r\n\r\n      </div>\r\n      <CContainer className=\"mt-4\">\r\n\r\n        <Suspense fallback={loading}>\r\n          <Switch>\r\n            {approutes.map((route, idx) => {\r\n              return route.component && (\r\n                <Route\r\n                  key={idx}\r\n                  path={route.path}\r\n                  exact={route.exact}\r\n                  name={route.name}\r\n                  render={props => (\r\n                    <CFade>\r\n                      <route.component {...props} />\r\n                    </CFade>\r\n                  )} />\r\n              )\r\n            })}\r\n            <Redirect from=\"/\" to=\"/dashboard\" />\r\n          </Switch>\r\n        </Suspense>\r\n      </CContainer>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default React.memo(TheContent)\r\n","import React from 'react'\r\nimport { CFooter } from '@coreui/react'\r\n\r\nconst TheFooter = () => {\r\n  return (\r\n    <CFooter fixed={false}>\r\n      {/* <div>\r\n        <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">Lab Symbiotic</a>\r\n        <span className=\"ml-1\">&copy; 2021 LabSymbiotic.</span>\r\n      </div> */}\r\n      <div className=\"mfs-auto\">\r\n        <span className=\"mr-1\">Powered by</span>\r\n        <a href=\"https://theaccountabilitybadge.com/\" target=\"_blank\" rel=\"noopener noreferrer\">ISK</a>\r\n      </div>\r\n    </CFooter>\r\n  )\r\n}\r\n\r\nexport default React.memo(TheFooter)\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  CHeader,\r\n  CToggler,\r\n  CHeaderNav,\r\n  CHeaderNavItem,\r\n  CHeaderNavLink\r\n} from '@coreui/react'\r\nimport './TheHeader.css'\r\nimport { \r\n  TheHeaderDropdown,\r\n}  from './index'\r\nimport { changeState } from 'src/store/slices/SideBarSlice'\r\n\r\nconst TheHeader = () => {\r\n  const dispatch = useDispatch()\r\n  const sidebarShow = useSelector(state => state.sidebar.sidebarShow)\r\n\r\n  const toggleSidebar = () => {\r\n    const val = [true, 'responsive'].includes(sidebarShow) ? false : 'responsive'\r\n    dispatch(changeState(val))\r\n    //dispatch({type: 'set', sidebarShow: val})\r\n  }\r\n\r\n  const toggleSidebarMobile = () => {\r\n    const val = [false, 'responsive'].includes(sidebarShow) ? true : 'responsive'\r\n    dispatch(changeState(val))\r\n    //dispatch({type: 'set', sidebarShow: val})\r\n  }\r\n  React.useEffect(()=>{\r\n    console.log('sidebar --- ',sidebarShow)\r\n  },[])\r\n  return (\r\n    <CHeader withSubheader>\r\n      <CToggler\r\n        inHeader\r\n        className=\"ml-md-3 d-lg-none\"\r\n        onClick={toggleSidebarMobile}\r\n      />\r\n      <CToggler\r\n        inHeader\r\n        className=\"ml-3 d-md-down-none\"\r\n        onClick={toggleSidebar}\r\n      />\r\n       {/* <CHeaderBrand className=\"mx-auto d-lg-none\" to=\"/\">\r\n        <CIcon name=\"logo\" height=\"48\" alt=\"Logo\"/>\r\n      </CHeaderBrand> */}\r\n\r\n      <CHeaderNav className=\"d-md-down-none mr-auto\">\r\n        <CHeaderNavItem className=\"px-3\" >\r\n          <CHeaderNavLink to=\"/dashboard\">Dashboard</CHeaderNavLink>\r\n        </CHeaderNavItem>\r\n      {/* <CHeaderNavItem  className=\"px-3\">\r\n          <CHeaderNavLink to=\"/users\">Users</CHeaderNavLink>\r\n        </CHeaderNavItem>\r\n        <CHeaderNavItem className=\"px-3\">\r\n          <CHeaderNavLink>Settings</CHeaderNavLink>\r\n        </CHeaderNavItem>  */}\r\n      </CHeaderNav>\r\n\r\n      <CHeaderNav className=\"px-3\">\r\n        {/* <TheHeaderDropdownNotif/> */}\r\n        {/* <TheHeaderDropdownTasks/>\r\n        <TheHeaderDropdownMssg/> */}\r\n        <TheHeaderDropdown/>\r\n      </CHeaderNav>\r\n{/**Header banner image */}\r\n\r\n\r\n\r\n      {/* <CSubheader className=\"px-3 justify-content-between\">\r\n      <CBreadcrumbRouter \r\n          className=\"border-0 c-subheader-nav m-0 px-0 px-md-3\" \r\n          routes={routes} \r\n        /> \r\n          <div className=\"d-md-down-none mfe-2 c-subheader-nav\">\r\n             <CLink className=\"c-subheader-nav-link\"href=\"#\">\r\n              <CIcon name=\"cil-speech\" alt=\"Settings\" />\r\n            </CLink> \r\n            <CLink \r\n              className=\"c-subheader-nav-link\" \r\n              aria-current=\"page\" \r\n              to=\"/dashboard/temp\"\r\n            >\r\n              <CIcon name=\"cil-graph\" alt=\"Dashboard\" />&nbsp;Dashboard\r\n            </CLink>\r\n            <CLink className=\"c-subheader-nav-link\" href=\"#\">\r\n              <CIcon name=\"cil-settings\" alt=\"Settings\" />&nbsp;Settings\r\n            </CLink> \r\n          </div> \r\n      </CSubheader> */}\r\n      \r\n    </CHeader>\r\n  )\r\n}\r\n\r\nexport default TheHeader\r\n","import React, { useEffect } from 'react'\r\nimport {\r\n  CDropdown,\r\n  CDropdownItem,\r\n  CDropdownMenu,\r\n  CDropdownToggle,\r\n  CImg\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { API, BASE_URL } from 'src/config'\r\nimport { useHistory } from 'react-router'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { resetUser } from 'src/store/slices/UserSlice'\r\n\r\nconst TheHeaderDropdown = () => {\r\n  const full_name = useSelector(state=>state.user.data.first_name?state.user.data.first_name+' '+state.user.data.last_name:'loading...')\r\n  const profile_pic = useSelector(state => state.user.data.profile_pic)\r\n  let history=useHistory()\r\n  const dispatch = useDispatch()\r\n  const handle_logout=()=>{\r\n    API.get('logout/'+localStorage.getItem('user_id')+'/').then(response=>{\r\n      console.log(response.status)\r\n      if(response.data.success===true){\r\n        localStorage.clear()\r\n        dispatch(resetUser())\r\n        history.push('/login')\r\n      }\r\n      else if(response.status == 401){\r\n        localStorage.clear()\r\n        history.push('/login')\r\n      }\r\n    }).catch(err=>{\r\n      if(err.response.status == \"401\"){\r\n        localStorage.clear()\r\n        history.push('/login')\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <CDropdown\r\n      inNav\r\n      className=\"c-header-nav-items mx-2\"\r\n      direction=\"down\"\r\n    >\r\n      <CDropdownToggle className=\"c-header-nav-link\" caret={false}>\r\n        <div className=\"c-avatar\">\r\n          <CImg\r\n            src={profile_pic!=null?BASE_URL+profile_pic:'assets/images/avatar.png'}\r\n            className=\"c-avatar-img\"\r\n            alt=''\r\n          />\r\n        </div>\r\n        <span style={{marginLeft:\"8px\"}}>{full_name}</span>\r\n      </CDropdownToggle>\r\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\r\n        <CDropdownItem\r\n          header\r\n          tag=\"div\"\r\n          color=\"light\"\r\n          className=\"text-center\"\r\n        >\r\n          <strong>Account</strong>\r\n        </CDropdownItem>\r\n        {/* <CDropdownItem>\r\n          <CIcon name=\"cil-user\" className=\"mfe-2\" />Profile\r\n        </CDropdownItem> */}\r\n    \r\n     \r\n        {/* <CDropdownItem divider /> */}\r\n        <CDropdownItem onClick={handle_logout}>\r\n          <CIcon name=\"cil-account-logout\" className=\"mfe-2\" />\r\n          Logout\r\n        </CDropdownItem>\r\n      </CDropdownMenu>\r\n    </CDropdown>\r\n  )\r\n}\r\n\r\nexport default TheHeaderDropdown\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  CSidebar,\r\n  CSidebarBrand,\r\n  CSidebarNav,\r\n  CSidebarNavTitle,\r\n  CSidebarMinimizer,\r\n  CSidebarNavItem,\r\n  CLabel\r\n} from '@coreui/react'\r\n//import { CIcon } from '@coreui/icons-react';\r\n\r\nimport { useHistory } from 'react-router'\r\nimport '../assets/warehouse.svg'\r\nimport './TheSidebar.css'\r\nimport { changeState } from 'src/store/slices/SideBarSlice';\r\nconst TheSidebar = () => {\r\n  const dispatch = useDispatch()\r\n  let history=useHistory()\r\n  const show = useSelector(state => state.sidebar.sidebarShow)\r\n  const [group,setGroup] = React.useState('')\r\n  useEffect(()=>{\r\n    setGroup(localStorage.getItem('group'))\r\n  },[])\r\n  return (\r\n    <CSidebar\r\n      show={show}\r\n      onShowChange={(val) => dispatch(changeState(val))}\r\n    >\r\n      <CSidebarBrand className=\"d-md-down-none text-center\" to=\"/\">\r\n\r\n        {/* <CIcon\r\n          name=\"cil-shield-alt\"\r\n          height={25}\r\n        /> */}\r\n        <img src={'assets/images/nypd.png'} className=\"sidebar-brand\"/>\r\n      </CSidebarBrand>\r\n      \r\n      {group == 'admin' && <CSidebarNav>\r\n        <CSidebarNavItem to=\"/dashboard\" icon=\"cil-speedometer\" name=\"Dashboard\"></CSidebarNavItem>\r\n        <CSidebarNavTitle>Administration</CSidebarNavTitle>\r\n        <CSidebarNavItem to=\"/dashboard/employees\" onClick={()=>{history.push('/dashboard/users/show')}} icon=\"cil-group\" name=\"Employees\"></CSidebarNavItem>\r\n        <CSidebarNavItem to=\"/dashboard/badges\" icon=\"cil-badge\" name=\"Badges\"></CSidebarNavItem>\r\n        <CSidebarNavItem to=\"/dashboard/scan-history\" icon=\"cil-people\" name=\"Scans\"></CSidebarNavItem>\r\n        <CSidebarNavItem to=\"/dashboard/sitecontrol\" icon=\"cil-control\" name=\"Site Control\"></CSidebarNavItem>\r\n        <CSidebarNavItem to=\"/dashboard/time\" icon=\"cil-clock\" name=\"Time\"></CSidebarNavItem>\r\n        <CSidebarNavItem to=\"/dashboard/account\" icon=\"cil-calculator\" name=\"Account\"></CSidebarNavItem>\r\n        <CSidebarNavItem to=\"/dashboard/billing\" icon=\"cil-money\" name=\"Billing\"></CSidebarNavItem>\r\n        <CSidebarNavItem to=\"/dashboard/contacts\" icon=\"cil-people\" name=\"Contacts\"></CSidebarNavItem>\r\n      </CSidebarNav>}\r\n\r\n      { /*officer side nav*/ }\r\n\r\n      {group == 'officer' && <CSidebarNav>\r\n        <CSidebarNavItem to=\"/dashboard\" icon=\"cil-speedometer\" name=\"Dashboard\"></CSidebarNavItem>\r\n        <CSidebarNavTitle>Personnel Account</CSidebarNavTitle>\r\n        <CSidebarNavItem to=\"/dashboard/account/personal\" onClick={()=>{history.push('/dashboard/account/personal')}} icon=\"cil-notes\" name=\"Account\"></CSidebarNavItem>\r\n        <CSidebarNavItem to=\"/dashboard/account/time\" onClick={()=>{history.push('/dashboard/account/time')}} icon=\"cil-clock\" name=\"Time\"></CSidebarNavItem>\r\n        <CSidebarNavItem to=\"/dashboard/account/badge\" onClick={()=>{history.push('/dashboard/account/badge')}} icon=\"cil-credit-card\" name=\"My Badge\"></CSidebarNavItem>\r\n        <CSidebarNavItem to=\"/dashboard/account/contacts\" onClick={()=>{history.push('/dashboard/account/contacts')}} icon=\"cil-people\" name=\"Contacts\"></CSidebarNavItem>\r\n      </CSidebarNav>}\r\n\r\n      <CSidebarMinimizer className=\"c-d-md-down-none\"/>\r\n    </CSidebar>\r\n  )\r\n}\r\n\r\nexport default React.memo(TheSidebar)\r\n","import React, { useState } from 'react'\r\nimport {\r\n  CCardHeader,\r\n  CCardBody,\r\n  CCard,CRow,CCol,CImg\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport GoogleMapReact from 'google-map-react'\r\n// import { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\"\r\nimport {  BASE_URL, PUBLIC_API } from 'src/config';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\r\n\r\nfunction renderMarkers(map, maps,lat,lng) {\r\n  const myLatLng = { lat: lat, lng: lng }\r\n  console.log('setting lat lng -- ',myLatLng)\r\n  new maps.Marker({\r\n    position: myLatLng,\r\n    map,\r\n    title: 'Hello World!'\r\n  });\r\n}\r\n\r\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\r\n// const MapWithAMarker = withScriptjs(withGoogleMap(() =>\r\n//   <GoogleMap\r\n//     defaultZoom={8}\r\n//     defaultCenter={{ lat: -34.397, lng: 150.644 }}\r\n//   >\r\n//     <Marker\r\n//       position={{ lat: -34.397, lng: 150.644 }}\r\n//     />\r\n//   </GoogleMap>\r\n// ));\r\nconst CardSwipped = (data)=>{\r\n  const [user_data,setUserData] = useState({})\r\n  const [lat_lng,setLatLng]=useState([])\r\n  const [border,setBorder] = useState({borderColor:'',borderStyle:''})\r\n  const [mood,setMood] = useState()\r\n  const handleApiLoaded = (map, maps) => {\r\n    // use map and maps objects\r\n  };\r\n  React.useEffect(()=>{\r\n    console.log('props data --- ',data.data)\r\n    \r\n    switch(data.data.mood){\r\n      case 'Emergency':\r\n        setMood('Emergency Level 1')\r\n        setBorder({borderColor:'yellow',borderStyle:'solid'})\r\n        break\r\n      case \"Dangerous\":\r\n        setMood('Emergency Level 2')\r\n        setBorder({borderColor:'red',borderStyle:'solid'})\r\n        break\r\n      case \"Most dangerous\":\r\n        setMood('Emergency Level 3')\r\n        setBorder({borderColor:'#8b0000',borderStyle:'solid'})\r\n        break\r\n      case \"Much more dangerous\":\r\n        setMood('Emergency Level 4')\r\n        setBorder({borderColor:'black',borderStyle:'solid'})\r\n        break\r\n    }\r\n      PUBLIC_API.get(\"profile/details/\"+data.data.user_id+\"/\").then(async(res)=>{\r\n        console.log('lat from res --- ',res.data.data)\r\n        setUserData(res.data.data)\r\n        setLatLng([Number(res.data.data.lat),Number(res.data.data.lng)])\r\n      })\r\n  },[])\r\n    return(\r\n      <>\r\n      <div id=\"wrapper\">\r\n        Status: {mood}\r\n        <CCard>\r\n          <CCardHeader>\r\n            <h3>Details of Card Owner</h3>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CRow className=\"justify-content-center mb-3\">\r\n                <CCol>\r\n                    <CImg className=\"mx-auto rounded-circle\" style={{height:\"100px\",width:\"100px\"}} shape=\"rounded\" src={BASE_URL+user_data.profile_pic}/>\r\n                </CCol>\r\n            </CRow>\r\n            <CRow>\r\n              <CCol>\r\n                <p className=\"text-left\">\r\n                <strong>Name :</strong> {user_data.first_name + ' '+ user_data.last_name}<br/>\r\n                <strong>Email :</strong> {user_data.email}<br/>\r\n                <strong>Phone :</strong> {user_data.phone}<br/>\r\n                <strong>Registration :</strong> {user_data.registration}<br/>\r\n                <strong>Address :</strong> {user_data.address}<br/>\r\n                </p>\r\n              </CCol>\r\n            </CRow>\r\n            {/* <CRow className=\"justify-content-left\">\r\n              <CForm className=\"form-horizontal\">\r\n                <CFormGroup>\r\n                  <div className=\"controls\">\r\n                    <CInputGroup className=\"input-prepend\">\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>Name</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput value={user_data.first_name+' '+user_data.last_name} id=\"prependedInput\" size=\"16\" type=\"text\" readOnly style={{background:'white',border:'none'}}/>\r\n                    </CInputGroup>\r\n                  </div>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <div className=\"controls\">\r\n                    <CInputGroup className=\"input-prepend\">\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>Email</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput value={user_data.email} id=\"prependedInput\" size=\"16\" type=\"text\" readOnly style={{background:'white',border:'none'}}/>\r\n                    </CInputGroup>\r\n                  </div>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <div className=\"controls\">\r\n                    <CInputGroup className=\"input-prepend\">\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>Phone</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput value={user_data.phone} id=\"prependedInput\" size=\"16\" type=\"text\" readOnly style={{background:'white',border:'none'}}/>\r\n                    </CInputGroup>\r\n                  </div>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <div className=\"controls\">\r\n                    <CInputGroup className=\"input-prepend\">\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>Registration</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput value={user_data.registration} id=\"prependedInput\" size=\"16\" type=\"text\" readOnly style={{background:'white',border:'none'}}/>\r\n                    </CInputGroup>\r\n                  </div>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <div className=\"controls\">\r\n                    <CInputGroup className=\"input-prepend\">\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>Address</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput value={user_data.address} id=\"prependedInput\" size=\"16\" type=\"text\" readOnly style={{background:'white',border:'none'}}/>\r\n                    </CInputGroup>\r\n                  </div>\r\n                </CFormGroup>\r\n              </CForm>\r\n            </CRow> */}\r\n            <CRow>\r\n              <div style={{ height: '250px', width: '100%' }}>\r\n                <div className=\"mb-2\">Lat : {user_data.lat} & Lng: {user_data.lng} </div>\r\n                {/* <MapWithAMarker\r\n                  googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyC4R6AN7SmujjPUIGKdyao2Kqitzr1kiRg&v=3.exp&libraries=geometry,drawing,places\"\r\n                  loadingElement={<div style={{ height: `100%` }} />}\r\n                  containerElement={<div style={{ height: `400px` }} />}\r\n                  mapElement={<div style={{ height: `100%` }} />}\r\n                >\r\n                  <Marker position={{ lat: -34.397, lng: 150.644 }} />\r\n                </MapWithAMarker> */}\r\n                <GoogleMapReact\r\n                    bootstrapURLKeys={{key:'AIzaSyCbynC4V9qRGyQTR5-ssW8qb0yX4oNNnKc'}}\r\n                    defaultCenter={{lat:23.7104,lng:90.4074}}\r\n                    defaultZoom={11}\r\n                    yesIWantToUseGoogleMapApiInternals\r\n                    onGoogleApiLoaded={({ map, maps }) => handleApiLoaded(map, maps)}\r\n                >\r\n                  <AnyReactComponent lat={23.7104} lng={90.4074}/>\r\n                </GoogleMapReact>\r\n                \r\n              </div>\r\n              \r\n            </CRow>\r\n          </CCardBody>\r\n        </CCard>\r\n      </div>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default CardSwipped","import React, {useEffect } from 'react'\r\nimport {\r\n  TheContent,\r\n  TheSidebar,\r\n  TheFooter,\r\n  TheHeader\r\n} from './index'\r\nimport {TOKEN} from '../config'\r\nimport {Redirect, useHistory} from \"react-router\"\r\nimport { WebSocketBridge } from 'django-channels'\r\nimport CardSwipped from 'src/components/swipe/CardSwipped'\r\nimport swal from '@sweetalert/with-react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchDashboardData } from 'src/store/slices/DashboardSlice';\r\nimport { fetchNotificationsThunk } from 'src/store/slices/NotificationSlice'\r\nimport { fetchRatingsThunk } from 'src/store/slices/RatingSlice'\r\nimport { useSnackbar } from 'notistack';\r\nimport { fetchDetailsThunk } from 'src/store/slices/UserSlice'\r\n\r\nconst TheLayout = () => {\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n  const dispatch = useDispatch()\r\n  let history = useHistory()\r\n  let web_socket=new WebSocketBridge()\r\n  const isLoggedIn=()=>{\r\n    if(localStorage.getItem(TOKEN)===null || localStorage.getItem(TOKEN)===''){\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  \r\n  useEffect(()=>{\r\n    dispatch(fetchDetailsThunk(localStorage.getItem('user_id')))\r\n      web_socket.connect('ws://103.123.8.52:8075/nfc/notifications')\r\n      web_socket.addEventListener(\"message\", function(event) {\r\n        console.log(event.data);\r\n        if(event.data.type == 'review.notification'){\r\n          enqueueSnackbar(event.data.officer_name+' got rated by '+event.data.name,{variant: 'info'})\r\n          dispatch(fetchRatingsThunk())  \r\n        }\r\n        else{\r\n          dispatch(fetchDashboardData())\r\n          dispatch(fetchNotificationsThunk())\r\n          enqueueSnackbar(event.data.officer_name+\"'s badge (\"+event.data.badge_number+\") got scanned\",{variant: 'info'})\r\n          swal({\r\n            content:(<CardSwipped data={event.data}/>),\r\n            buttons:['Close']\r\n          })\r\n        }\r\n      });\r\n  },[])\r\n  return (\r\n    <>\r\n    {\r\n        isLoggedIn()===false &&\r\n        <Redirect to=\"/login\"/>\r\n    }\r\n    <div className=\"c-app c-default-layout\">\r\n      <TheSidebar/>\r\n      <div className=\"c-wrapper\">\r\n        <TheHeader/>\r\n        <div className=\"c-body\">\r\n          <TheContent/>\r\n        </div>\r\n        <TheFooter/>\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TheLayout\r\n"],"sourceRoot":""}