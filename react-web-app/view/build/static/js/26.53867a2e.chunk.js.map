{"version":3,"sources":["components/departments/Departments.js"],"names":["Departments","history","useHistory","useState","name","setName","supervisor","email","setEmail","phone","setPhone","address","setAddress","departments","useSelector","state","data","Array","from","forEach","item","index","push","department_name","supervisor_name","officers","employees","dispatch","useDispatch","React","useEffect","fetchDepartmentsThunk","variant","activeTab","className","md","style","border","items","fields","key","_style","width","_classes","label","maxWidth","sorter","filter","light","hover","striped","bordered","columnFilter","size","itemsPerPage","pagination","scopedSlots","Action","onClick","type","color","action","method","sm","xs","htmlFor","id","value","onChange","event","target","undefined","map","officer","first_name","last_name","maxLength","console","log","formData","FormData","append","PUBLIC_API","post","then","res","success","swal","add_department"],"mappings":"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","file":"static/js/26.53867a2e.chunk.js","sourcesContent":["import { CContainer,CValidFeedback,CLabel,CSelect,CFormGroup,CForm,CInput ,CNav, CNavItem, CNavLink, CTabPane, CTabs, CCard, CCardBody, CCardHeader, CButton, CDataTable, CBadge, CCol, CRow, CTabContent, CTextarea } from '@coreui/react'\r\nimport React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { PUBLIC_API } from 'src/config'\r\nimport { fetchDepartmentsThunk } from 'src/store/slices/DepartmentSlice'\r\nimport swal from 'sweetalert'\r\n\r\nconst Departments = () => {\r\n    let history = useHistory()\r\n    const [currentTab,setCurrentTab]=useState('view')\r\n    const [name,setName]=useState('')\r\n    const [supervisor,setSupervisor]=useState('')\r\n    const [email,setEmail]=useState('')\r\n    const [phone,setPhone] = useState('')\r\n    const [address,setAddress] = useState('')\r\n    const departments = useSelector(state => {\r\n        let data = []\r\n        Array.from(state.departments.data).forEach((item, index) => {\r\n            data.push({ '#': index + 1, 'Name': item.department_name, 'Supervisor': item.supervisor_name, 'Email': item.email, 'Phone': item.phone, 'Address': item.address })\r\n        })\r\n        return data\r\n    })\r\n    const officers = useSelector(state => state.employees.data)\r\n    const dispatch = useDispatch()\r\n    React.useEffect(() => {\r\n        dispatch(fetchDepartmentsThunk())\r\n    }, [])\r\n    function add_department(){\r\n        console.log('ee')\r\n        var formData = new FormData()\r\n        formData.append('department_name',name)\r\n        formData.append('supervisor_name',supervisor)\r\n        formData.append('email',email)\r\n        formData.append('phone',phone)\r\n        formData.append('address',address)\r\n        PUBLIC_API.post('department/add/',formData).then((res)=>{\r\n            if(res.data.success == 'True'){\r\n                swal('Created!',name+' department has been created','success').then(()=>{\r\n                    history.push('/dashboard/departments')\r\n                })\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <CContainer>\r\n                <CTabs variant=\"tabs\" activeTab=\"view\">\r\n                    <CNav className=\"tab-style\">\r\n                        <CNavItem>\r\n                            <CNavLink data-tab=\"view\" className=\"special\">Departments</CNavLink>\r\n                        </CNavItem>\r\n                        <CNavItem>\r\n                            <CNavLink data-tab=\"add\" className=\"special\">Add Department</CNavLink>\r\n                        </CNavItem>\r\n                    </CNav>\r\n                    <CTabContent>\r\n                        <CTabPane data-tab=\"view\">\r\n                            <CRow>\r\n                                <CCol md=\"12\">\r\n                                    <CCard className=\"mt-3\" style={{ border: \"none\" }}>\r\n                                        <CCardBody>\r\n                                            <CDataTable\r\n                                                items={departments}\r\n                                                fields={[\r\n                                                    {\r\n                                                        key: \"#\",\r\n                                                        _style: { width: \"5%\" },\r\n                                                        _classes: \"font-weight-bold\",\r\n                                                    },\r\n                                                    \"Name\",\r\n                                                    \"Supervisor\",\r\n                                                    \"Email\",\r\n                                                    \"Phone\",\r\n                                                    \"Address\",\r\n\r\n                                                    {\r\n                                                        key: \"Action\",\r\n                                                        label: \"\",\r\n                                                        _style: { maxWidth: \"5%\" },\r\n                                                        sorter: true,\r\n                                                        filter: true,\r\n                                                    },\r\n                                                ]}\r\n                                                light\r\n                                                hover\r\n                                                striped\r\n                                                bordered\r\n                                                sorter\r\n                                                columnFilter\r\n                                                size=\"sm\"\r\n                                                itemsPerPage={10}\r\n                                                pagination\r\n                                                scopedSlots={{\r\n                                                    Action: (item) => (\r\n                                                        <td>\r\n                                                            <CBadge>\r\n                                                                <CButton\r\n                                                                    onClick={() => { }}\r\n                                                                    type=\"button\"\r\n                                                                    size=\"sm\"\r\n                                                                    color=\"danger\"\r\n                                                                >\r\n                                                                    Delete\r\n                                                                </CButton>{\" \"}\r\n                                                                <CButton\r\n                                                                    size=\"sm\"\r\n                                                                    type=\"button\"\r\n                                                                    color=\"primary\"\r\n                                                                    onClick={() => { }}\r\n                                                                >\r\n                                                                    Edit\r\n                                                                </CButton>\r\n                                                            </CBadge>\r\n                                                        </td>\r\n                                                    ),\r\n                                                }}\r\n                                            />\r\n                                        </CCardBody>\r\n                                    </CCard>\r\n                                </CCol>\r\n                            </CRow>\r\n                        </CTabPane>\r\n                    </CTabContent>\r\n                    <CTabContent>\r\n                        <CTabPane data-tab=\"add\">\r\n                            <CRow className=\"justify-content-center\" style={{ border: 'none' }}>\r\n                                <CCol style={{ border: 'none' }}>\r\n                                    <CCard style={{ border: 'none' }}>\r\n                                        <h4 className=\"table-header text-center\">Add new department</h4>\r\n                                        <CForm action=\"\" method=\"post\">\r\n                                            <CRow className=\"justify-content-center\">\r\n                                                {/**Name */}\r\n                                                <CCol md=\"8\" sm=\"12\" xs=\"12\">\r\n                                                    <CFormGroup>\r\n                                                        <CLabel\r\n                                                            htmlFor=\"name\"\r\n                                                            className=\"custom-label\"\r\n                                                        >\r\n                                                            Department Name\r\n                                                        </CLabel>\r\n                                                        <CInput id=\"name\" value={name} onChange={(event) => setName(event.target.value)} />\r\n                                                        <CValidFeedback>Cool! Input is valid</CValidFeedback>\r\n                                                    </CFormGroup>\r\n                                                </CCol>\r\n                                                {/**supervisor */}\r\n                                                <CCol md=\"8\" sm=\"12\" xs=\"12\">\r\n                                                    <CFormGroup>\r\n                                                        <CLabel\r\n                                                            htmlFor=\"phone\"\r\n                                                            className=\"custom-label\"\r\n                                                        >\r\n                                                            Supervisor\r\n                                                        </CLabel>\r\n                                                        <CSelect value={supervisor} onChange={(event) => setPhone(event.target.value)}>\r\n                                                            {officers!=undefined && Array.from(officers).map((officer)=>(<option key={officer.id} value={officer.first_name+' '+officer.last_name}>{officer.first_name+' '+officer.last_name}</option>))}\r\n                                                        </CSelect>\r\n                                                        <CValidFeedback>Cool! Input is valid</CValidFeedback>\r\n                                                    </CFormGroup>\r\n                                                </CCol>\r\n                                                {/**Phone */}\r\n                                                <CCol md=\"8\" sm=\"12\" xs=\"12\">\r\n                                                    <CFormGroup>\r\n                                                        <CLabel\r\n                                                            htmlFor=\"phone\"\r\n                                                            className=\"custom-label\"\r\n                                                        >\r\n                                                            Phone\r\n                                                        </CLabel>\r\n                                                        <CInput id=\"phone\" value={phone} onChange={(event) => setPhone(event.target.value)} />\r\n                                                        <CValidFeedback>Cool! Input is valid</CValidFeedback>\r\n                                                    </CFormGroup>\r\n                                                </CCol>\r\n                                                {/**email */}\r\n                                                <CCol md=\"8\" sm=\"12\" xs=\"12\">\r\n                                                    <CFormGroup>\r\n                                                        <CLabel\r\n                                                            htmlFor=\"email\"\r\n                                                            className=\"custom-label\"\r\n                                                        >\r\n                                                            Email\r\n                                                        </CLabel>\r\n                                                        <CInput id=\"email\" value={email} onChange={(event) => setEmail(event.target.value)} />\r\n                                                        <CValidFeedback>Cool! Input is valid</CValidFeedback>\r\n                                                    </CFormGroup>\r\n                                                </CCol>\r\n                                                {/**address */}\r\n                                                <CCol md=\"8\" sm=\"12\" xs=\"12\">\r\n                                                    <CFormGroup>\r\n                                                        <CLabel\r\n                                                            htmlFor=\"address\"\r\n                                                            className=\"custom-label\"\r\n                                                        >\r\n                                                            Address\r\n                                                        </CLabel>\r\n                                                        <CTextarea maxLength={9} id=\"address\" value={address} onChange={(event) => setAddress(event.target.value)} />\r\n                                                        <CValidFeedback>Cool! Input is valid</CValidFeedback>\r\n                                                    </CFormGroup>\r\n                                                </CCol>\r\n                                                {/**submit button */}\r\n                                                <CCol md=\"10\" sm=\"12\" xs=\"12\" className=\"text-center\">\r\n                                                    <CButton\r\n                                                        color=\"primary\"\r\n                                                        className=\"button-primary px-4 mt-3\"\r\n                                                        type=\"button\"\r\n                                                        onClick={()=>{add_department()}}\r\n                                                    >\r\n                                                        Add Department\r\n                                                    </CButton>\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                        </CForm>\r\n                                    </CCard>\r\n                                </CCol>\r\n                            </CRow>\r\n                        </CTabPane>\r\n                    </CTabContent>\r\n                </CTabs>\r\n            </CContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Departments"],"sourceRoot":""}