{"version":3,"sources":["components/scan-history/ScanHistory.js"],"names":["ScanHistory","history","useHistory","scans","useSelector","state","data","Array","from","notifications","forEach","item","index","push","nfc","nfc_number","user","first_name","last_name","Date","created_at","toLocaleDateString","toLocaleTimeString","md","items","fields","key","_style","width","_classes","label","sorter","filter","light","hover","striped","bordered","columnFilter","size","itemsPerPage","pagination","scopedSlots","onClick","swal","type","color","pathname","employee"],"mappings":"2HAAA,oEAwEeA,UAhEI,WACf,IAAIC,EAAUC,cACRC,EAAQC,aAAY,SAAAC,GACtB,IAAIC,EAAM,GAIV,OAHAC,MAAMC,KAAKH,EAAMI,cAAcH,MAAMI,SAAQ,SAACC,EAAKC,GAC/CN,EAAKO,KAAK,CAAC,IAAID,EAAM,EAAE,eAAeD,EAAKG,IAAIC,WAAW,cAAcJ,EAAKG,IAAIE,KAAKC,WAAW,IAAIN,EAAKG,IAAIE,KAAKE,UAAU,gBAAgB,IAAIC,KAAKR,EAAKG,IAAIM,YAAYC,qBAAqB,cAAc,IAAIF,KAAKR,EAAKS,YAAYE,qBAAqB,MAAM,IAAIH,KAAKR,EAAKS,YAAYC,0BAE1Rf,KAEX,OACI,mCACA,cAAC,IAAD,UACA,cAAC,IAAD,UACI,cAAC,IAAD,CAAMiB,GAAG,KAAT,SACI,eAAC,IAAD,WACI,cAAC,IAAD,UACI,yCAEJ,cAAC,IAAD,UACI,cAAC,IAAD,CACAC,MAAOrB,EACPsB,OAAQ,CACJ,CAAEC,IAAK,IAAIC,OAAQ,CAAEC,MAAO,MAAQC,SAAU,oBAC9C,eAAe,cAAc,gBAAgB,QAAQ,eAAe,CAAEH,IAAK,cAAcC,OAAQ,CAAEC,MAAO,QAAS,CAACF,IAAI,SAASI,MAAM,GAAGH,OAAQ,CAAEC,MAAO,OAAQG,QAAO,EAAMC,QAAO,IAE3LC,OAAK,EACLC,OAAK,EACLC,SAAO,EACPC,UAAQ,EACRL,QAAM,EACNM,cAAY,EAQZC,KAAK,KACLC,aAAc,GACdC,YAAU,EACVC,YAAe,CACX,OACA,SAAC9B,GAAD,OACI,6BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAS+B,QAAS,WAAQC,IAAK,UAAU,0CAA0C,YAAaC,KAAK,SAASN,KAAK,KAAKO,MAAM,SAA9H,oBADJ,IAC4J,cAAC,IAAD,CAASH,QAAS,WAAKzC,EAAQY,KAAK,CAACiC,SAAU,+BAA+BzC,MAAO,CAAE0C,SAAUpC,MAAW2B,KAAK,KAAKM,KAAK,SAASC,MAAM,UAA1I,6BAO5K,cAAC,IAAD","file":"static/js/28.36736aff.chunk.js","sourcesContent":["import React from 'react'\r\nimport {\r\n    CContainer,\r\n    CCardHeader,CCardBody,CCard,CBadge,CButton,CCardFooter,CDataTable,CRow,CCol\r\n  } from '@coreui/react'\r\nimport { useSelector } from 'react-redux'\r\nimport swal from 'sweetalert'\r\nimport { useHistory } from 'react-router'\r\nconst ScanHistory =()=>{\r\n    let history = useHistory()\r\n    const scans = useSelector(state => {\r\n        let data =[]\r\n        Array.from(state.notifications.data).forEach((item,index)=>{\r\n            data.push({\"#\":index+1,\"Badge Number\":item.nfc.nfc_number,\"Assigned To\":item.nfc.user.first_name+' '+item.nfc.user.last_name,\"Assigned Date\":new Date(item.nfc.created_at).toLocaleDateString(),'Time & Date':new Date(item.created_at).toLocaleTimeString()+' - '+new Date(item.created_at).toLocaleDateString()})\r\n        })\r\n        return data\r\n    })\r\n    return(\r\n        <>\r\n        <CContainer>\r\n        <CRow>\r\n            <CCol md=\"12\">\r\n                <CCard>\r\n                    <CCardHeader>\r\n                        <h3>Scans</h3>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                        <CDataTable\r\n                        items={scans}\r\n                        fields={[\r\n                            { key: '#',_style: { width: '5%' }, _classes: 'font-weight-bold' },\r\n                            'Badge Number','Assigned To','Assigned Date','Scans','Global Scans',{ key: 'Time & Date',_style: { width: '25%' }},{key:'Action',label:'',_style: { width: '12%' },sorter:false,filter:false}\r\n                        ]}\r\n                        light\r\n                        hover\r\n                        striped\r\n                        bordered\r\n                        sorter\r\n                        columnFilter\r\n                        // clickableRows\r\n                        // onRowClick={(row)=>{\r\n                        //     history.push({\r\n                        //         pathname: '/dashboard/employees/details',\r\n                        //         state: { employee: row }\r\n                        //     })\r\n                        // }}\r\n                        size=\"sm\"\r\n                        itemsPerPage={10}\r\n                        pagination\r\n                        scopedSlots = {{\r\n                            'Action':\r\n                            (item)=>(\r\n                                <td>\r\n                                    <CBadge>\r\n                                        <CButton onClick={() => { swal('Warning','This service is not available right now','warning')}} type=\"button\" size=\"sm\" color=\"danger\">Delete</CButton> <CButton onClick={()=>{history.push({pathname: '/dashboard/employees/details',state: { employee: item }})}} size=\"sm\" type=\"button\" color=\"primary\">Edit</CButton>\r\n                                    </CBadge>\r\n                                </td>\r\n                            )\r\n                        }}\r\n                        />\r\n                    </CCardBody>\r\n                    <CCardFooter>\r\n                        \r\n                    </CCardFooter>\r\n                </CCard>\r\n            </CCol>\r\n        </CRow>\r\n        </CContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ScanHistory"],"sourceRoot":""}