{"version":3,"sources":["components/badges/Badges.js"],"names":["Badges","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","React","useState","open","setOpen","handleClose","age","setAge","md","items","Number","fields","key","_style","width","_classes","label","sorter","filter","primary","hover","striped","bordered","columnFilter","clickableRows","size","itemsPerPage","pagination","scopedSlots","item","onClick","type","color","class","className","id","data-toggle","aria-expanded","name","aria-labelledby","onClose","required","defaultValue","labelId","value","onChange","event","target"],"mappings":"kTAiJeA,UAnIA,WACX,IAAMC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,YAAa,CACRC,OAAQF,EAAMG,QAAQ,GACvBC,SAAU,KAEdC,YAAa,CACTC,UAAWN,EAAMG,QAAQ,QAGjC,EAAwBI,IAAMC,UAAS,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KAKMC,EAAc,WAChBD,GAAQ,IAGZ,GADgBZ,IACMS,IAAMC,SAAS,KAArC,mBAAOI,EAAP,KAAYC,EAAZ,KAWA,OACI,mCACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAMC,GAAG,KAAT,SACI,eAAC,IAAD,WACI,cAAC,IAAD,qBAGA,cAAC,IAAD,UAEI,cAAC,IAAD,CACIC,MAfV,CACd,CAAEC,OAAQ,UAAW,eAAgB,aAAc,MAAS,KAAM,eAAgB,OAe1DC,OAAQ,CACJ,CAAEC,IAAK,IAAKC,OAAQ,CAAEC,MAAO,MAAQC,SAAU,oBAC/C,eAAgB,eAAgB,cAAe,QAAS,eAAgB,CAAEH,IAAK,SAAUI,MAAO,GAAIH,OAAQ,CAAEC,MAAO,OAASG,QAAQ,EAAMC,QAAQ,IAExJC,SAAO,EACPC,OAAK,EACLC,SAAO,EACPC,UAAQ,EACRL,QAAM,EACNM,cAAY,EACZC,eAAa,EAObC,KAAK,KACLC,aAAc,GACdC,YAAU,EACVC,YAAa,CACT,OACI,SAACC,GAAD,OACI,6BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAASC,QAAS,aAAWC,KAAK,SAASN,KAAK,KAAKO,MAAM,SAA3D,oBADJ,IACyF,cAAC,IAAD,CAASP,KAAK,KAAKM,KAAK,SAASC,MAAM,UAAvC,kCASzH,eAAC,IAAD,CAAMxB,GAAG,KAAKyB,MAAM,SAApB,UACI,cAAC,IAAD,CAASC,UAAU,iBAAiBH,KAAK,SAAzC,mCACA,eAAC,IAAD,CAASA,KAAK,SAASG,UAAU,6BAA6BC,GAAG,gBAAgBC,cAAY,WAAWC,gBAAc,QAAtH,qBAEY,cAAC,IAAD,CAAOC,KAAK,WAAWb,KAAK,UAExC,sBAAKQ,MAAM,WAAX,UAEI,sBAAKA,MAAM,qBAAqBM,kBAAgB,gBAAhD,UACI,wBAAQN,MAAM,gBAAgBF,KAAK,SAAnC,qBACA,qBAAKE,MAAM,qBACX,wBAAQF,KAAK,SAASE,MAAM,gBAAgBH,QA5E5C,WACpB1B,GAAQ,IA2EY,6BAKJ,cAAC,IAAD,CAAQD,KAAMA,EAAMqC,QAASnC,EAAakC,kBAAgB,oBAAoBL,UAAU,UAAxF,SACI,sBAAKA,UAAU,cAAf,UACI,cAAC,IAAD,CAAaC,GAAG,oBAAhB,gCACA,cAAC,IAAD,UACI,iCACI,cAAC,IAAD,CAAWM,UAAQ,EAACN,GAAG,oBAAoBnB,MAAM,UAAU0B,aAAa,cAAcR,UAAU,YAChG,eAAC,IAAD,CAAaA,UAAU,aAAvB,UACI,cAAC,IAAD,CAAYC,GAAG,2BAAf,0BACA,eAAC,IAAD,CACIQ,QAAQ,2BACRR,GAAG,qBACHS,MAAOtC,EACPuC,SAlFvB,SAACC,GAClBvC,EAAOuC,EAAMC,OAAOH,QA6EgB,UAMI,cAAC,IAAD,CAAUA,MAAO,GAAjB,sBACA,cAAC,IAAD,CAAUA,MAAO,GAAjB,sBACA,cAAC,IAAD,CAAUA,MAAO,GAAjB,iCAOhB,cAAC,IAAD,CAAeV,UAAU,yBAAzB,SACI,cAAC,IAAD,CAASJ,QAASzB,EAAa2B,MAAM,UAAUE,UAAU,2BAAzD","file":"static/js/12.5e2aee9f.chunk.js","sourcesContent":["import React from 'react'\r\nimport './badges.css'\r\nimport { CIcon } from '@coreui/icons-react';\r\nimport { CCard, CRow, CCol, CCardBody, CCardHeader, CDataTable, CBadge, CButton } from '@coreui/react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst Badges = () => {\r\n    const useStyles = makeStyles((theme) => ({\r\n        formControl: {\r\n             margin: theme.spacing(1),\r\n            minWidth: 120,\r\n        },\r\n        selectEmpty: {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    }));\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const classes = useStyles();\r\n    const [age, setAge] = React.useState('');\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n    }\r\n\r\n    const badgeList = [\r\n        { Number: '1245678', 'Created Date': '21-01-2021', 'Scans': '12', 'Global Scans': '19' }\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <CRow>\r\n                <CCol md=\"12\">\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            Badges\r\n                        </CCardHeader>\r\n                        <CCardBody>\r\n\r\n                            <CDataTable\r\n                                items={badgeList}\r\n                                fields={[\r\n                                    { key: '#', _style: { width: '5%' }, _classes: 'font-weight-bold' },\r\n                                    'Badge Number', 'Created Date', 'Assigned To', 'Scans', 'Global Scans', { key: 'Action', label: '', _style: { width: '12%' }, sorter: true, filter: false }\r\n                                ]}\r\n                                primary\r\n                                hover\r\n                                striped\r\n                                bordered\r\n                                sorter\r\n                                columnFilter\r\n                                clickableRows\r\n                                // onRowClick={(row)=>{\r\n                                //     history.push({\r\n                                //         pathname: '/dashboard/employees/details',\r\n                                //         state: { employee: row }\r\n                                //     })\r\n                                // }}\r\n                                size=\"sm\"\r\n                                itemsPerPage={10}\r\n                                pagination\r\n                                scopedSlots={{\r\n                                    'Action':\r\n                                        (item) => (\r\n                                            <td>\r\n                                                <CBadge>\r\n                                                    <CButton onClick={() => { }} type=\"button\" size=\"sm\" color=\"danger\">Delete</CButton> <CButton size=\"sm\" type=\"button\" color=\"primary\">View</CButton>\r\n                                                </CBadge>\r\n                                            </td>\r\n                                        )\r\n                                }}\r\n                            />\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n                <CCol md=\"12\" class=\"d-flex\">\r\n                    <CButton className=\"button-primary\" type=\"button\">Assign all unassigned</CButton>\r\n                    <CButton type=\"button\" className=\"button-primary float-right\" id=\"dropdownMenu2\" data-toggle=\"dropdown\" aria-expanded=\"false\">\r\n\r\n                        Add New <CIcon name=\"cil-plus\" size=\"xl\"></CIcon>\r\n                    </CButton>\r\n                    <div class=\"dropdown\">\r\n\r\n                        <div class=\"dropdown-menu mt-2\" aria-labelledby=\"dropdownMenu2\">\r\n                            <button class=\"dropdown-item\" type=\"button\">Buy New</button>\r\n                            <div class=\"dropdown-divider\"></div>\r\n                            <button type=\"button\" class=\"dropdown-item\" onClick={handleClickOpen}>Use Existing</button>\r\n\r\n\r\n                        </div>\r\n                        {/* modal for form input */}\r\n                        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" className=\"d-block\">\r\n                            <div className=\" modal-comp\">\r\n                                <DialogTitle id=\"form-dialog-title\">Use Existing Badge</DialogTitle>\r\n                                <DialogContent>\r\n                                    <form>\r\n                                        <TextField required id=\"standard-required\" label=\"Card ID\" defaultValue=\"Hello World\" className=\"d-block\" />\r\n                                        <FormControl className=\"w-100 mt-2\">\r\n                                            <InputLabel id=\"demo-simple-select-label\">Product Type</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"demo-simple-select-label\"\r\n                                                id=\"demo-simple-select\"\r\n                                                value={age}\r\n                                                onChange={handleChange}\r\n                                            >\r\n                                                <MenuItem value={10}>Product1</MenuItem>\r\n                                                <MenuItem value={20}>Product2</MenuItem>\r\n                                                <MenuItem value={30}>Product3</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n\r\n                                    </form>\r\n\r\n                                </DialogContent>\r\n                                <DialogActions className=\"justify-content-center\">\r\n                                    <CButton onClick={handleClose} color=\"primary\" className=\"button-primary px-4 mt-2\">\r\n                                        Submit\r\n                                    </CButton>\r\n\r\n                                </DialogActions>\r\n                            </div>\r\n                        </Dialog>\r\n                    </div>\r\n                </CCol>\r\n            </CRow>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Badges\r\n"],"sourceRoot":""}