{"version":3,"sources":["config.js","components/login/Login.js"],"names":["API_URL","TOKEN","API","axios","create","baseURL","timeout","headers","localStorage","getItem","interceptors","request","use","config","token","error","Promise","reject","useStyles","makeStyles","theme","root","width","marginTop","spacing","Login","classes","useState","submitted","setSubmitted","email","setEmail","password","setPassword","history","useHistory","handleSubmit","console","log","JSON","stringify","setTimeout","push","pathname","user","to","className","md","name","value","onChange","event","target","type","placeholder","autoComplete","onKeyDown","e","keyCode","xs","color","onClick"],"mappings":"2HAAA,0FAGaA,EAA6D,yBAI7DC,EAAQ,eAMRC,EAAMC,IAAMC,OAAO,CAC9BC,QAASL,EACTM,QAAS,IACTC,QAAS,CACP,cAAgB,UAAhB,OAA2BC,aAAaC,QAAQR,IAChD,eAAgB,sBAIIE,IAAMC,OAAO,CACnCC,QAASL,EACTM,QAAS,IACTC,QAAS,CACP,cAAgB,UAAhB,OAA2BC,aAAaC,QAAQR,IAChD,eAAgB,yBAIpBC,EAAIQ,aAAaC,QAAQC,KACvB,SAASC,GACP,IAAMC,EAAQN,aAAaC,QAAQR,GAInC,OAHIa,IACFD,EAAON,QAAP,cAAkC,UAAYO,GAEzCD,KAET,SAASE,GACP,OAAOC,QAAQC,OAAOF,MAGAZ,IAAMC,OAAO,CACrCC,QAASL,EACTM,QAAS,IACTC,QAAQ,CACN,eAAgB,sBAIKJ,IAAMC,OAAO,CACpCE,QAAS,MAGeH,IAAMC,OAAO,CACrCE,QAAS,O,iKClCLY,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,OACP,YAAa,CACXC,UAAWH,EAAMI,QAAQ,SAyGhBC,UArGD,WACV,IAAIC,EAAQR,IACZ,EAA+BS,oBAAS,GAAxC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAuBF,mBAAS,kBAAhC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA6BJ,mBAAS,UAAtC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAiCN,mBAAS,IAA1C,mBACMO,GADN,UACcC,eAaNC,EAAa,WACjBP,GAAa,GACbQ,QAAQC,IAAIC,KAAKC,UAAU,CAACV,MAAMA,EAAME,SAASA,KAcjDS,YAAW,WACTZ,GAAa,GACbK,EAAQQ,KAAK,CAACC,SAAS,aAAaC,KAAK,CAACd,MAAMA,EAAME,SAASA,OAC/D,MAEN,OACI,qCAjCiC,OAA9BxB,aAAaC,QAAQR,MAkCP,cAAC,IAAD,CAAU4C,GAAG,eAC9B,qBAAKC,UAAU,kEAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMA,UAAU,yBAAhB,SACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACI,cAAC,IAAD,UACA,cAAC,IAAD,CAAOD,UAAU,MAAjB,SACI,cAAC,IAAD,UACA,eAAC,IAAD,WACI,yCACA,mBAAGA,UAAU,aAAb,qCACA,eAAC,IAAD,CAAaA,UAAU,OAAvB,UACA,cAAC,IAAD,UACI,cAAC,IAAD,UACA,cAAC,IAAD,CAAOE,KAAK,iBAGhB,cAAC,IAAD,CAAQC,MAAOnB,EAAOoB,SAAU,SAACC,GAAD,OAASpB,EAASoB,EAAMC,OAAOH,QAAQI,KAAK,QAAQC,YAAY,QAAQC,aAAa,aAErH,eAAC,IAAD,CAAaT,UAAU,OAAvB,UACA,cAAC,IAAD,UACI,cAAC,IAAD,UACA,cAAC,IAAD,CAAOE,KAAK,wBAGhB,cAAC,IAAD,CAAQQ,UAtDP,SAAAC,GAED,KAAdA,EAAEC,SACJtB,KAmDmDiB,KAAK,WAAWC,YAAY,WAAWC,aAAa,mBAAmBL,SAAU,SAACC,GAAD,OAASlB,EAAYkB,EAAMC,OAAOH,QAAQA,MAAOjB,OAErK,cAAC,IAAD,UACA,cAAC,IAAD,CAAM2B,GAAG,KAAKZ,GAAG,KAAjB,SACGnB,EAAY,sBAAKkB,UAAWpB,EAAQL,KAAxB,cAA+B,cAAC,IAAD,CAAgBuC,MAAM,YAArD,OAAyE,cAAC,IAAD,CAASA,MAAM,UAAUd,UAAU,qBAAqBe,QAASzB,EAAjE","file":"static/js/10.167abf39.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst status = 'dev'\r\nexport const API_URL = status === 'prod' ? 'https://api.hootel.com.bd/' : 'http://localhost:8000/'\r\n//export const API_URL = 'http://phplaravel-500747-1741594.cloudwaysapps.com/api/';\r\n//export const API_URL= 'http://localhost:8000/api/';\r\nexport const faker_url = \"http://202.164.212.238:9050\"\r\nexport const TOKEN = \"access_token\"\r\n\r\nexport const credentials = {\r\n  \"GOOGLE_CLIENT_ID\": \"705019730299-kfb5arnuisah2135tka05uka6h7v901a.apps.googleusercontent.com\",\r\n  \"FACEBOOK_APP_ID\": \"788095958681659\"\r\n}\r\nexport const API = axios.create({\r\n  baseURL: API_URL,\r\n  timeout: 100000,\r\n  headers: {\r\n    \"Authorization\": `Bearer ${localStorage.getItem(TOKEN)}`,\r\n    \"Content-Type\": \"application/json\",\r\n   // \"Access-Control-Allow-Origin\": \"*\"\r\n  }\r\n})\r\nexport const FILE_API = axios.create({\r\n  baseURL: API_URL,\r\n  timeout: 100000,\r\n  headers: {\r\n    \"Authorization\": `Bearer ${localStorage.getItem(TOKEN)}`,\r\n    \"Content-Type\": \"multipart/form-data\",\r\n   // \"Access-Control-Allow-Origin\": \"*\"\r\n  }\r\n})\r\nAPI.interceptors.request.use(\r\n  function(config) {\r\n    const token = localStorage.getItem(TOKEN); \r\n    if (token) {\r\n      config.headers[\"Authorization\"] = 'Bearer ' + token;\r\n    }\r\n    return config;\r\n  },\r\n  function(error) {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\nexport const PUBLIC_API = axios.create({\r\n  baseURL: API_URL,\r\n  timeout: 100000,\r\n  headers:{\r\n    \"Content-Type\": \"application/json\"\r\n  }\r\n})\r\n\r\nexport const FAKER_API = axios.create({\r\n  timeout: 10000\r\n})\r\n\r\nexport const DOWNLOADER = axios.create({\r\n  timeout: 10000\r\n})\r\n\r\nexport const isLoggedIn=()=>{\r\n  if(localStorage.getItem(TOKEN)===null){\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n// export function can(permission){\r\n//   let result=false;\r\n//   if(localStorage.getItem('permissions')!==undefined){\r\n//     Array.from(JSON.parse(localStorage.getItem('permissions'))).forEach(role=>{\r\n//       if(role.name===permission){\r\n//         result=true;\r\n//       }\r\n//     })\r\n//   }\r\n  \r\n//   return result;\r\n// }\r\n// export function hasRole(role_name){\r\n//   let result=false;\r\n//   if(localStorage.getItem('roles')!==undefined){\r\n//     Array.from(JSON.parse(localStorage.getItem('roles'))).forEach(role=>{\r\n//       if(role===role_name){\r\n//         result=true;\r\n//       }\r\n//     })\r\n//   }\r\n//   return result;\r\n// }\r\n\r\n","import React,{useState} from 'react'\r\nimport {Redirect, useHistory} from \"react-router\"\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CRow\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport {TOKEN,PUBLIC_API,API} from '../../config'\r\nimport swal from 'sweetalert'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {LinearProgress} from '@material-ui/core';\r\nimport './login.css'\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\nconst Login = () => {\r\n    let classes=useStyles()\r\n    const [submitted,setSubmitted]=useState(false)\r\n    const [email,setEmail]=useState(\"admin@mail.com\");\r\n    const [password,setPassword]=useState(\"123456\");\r\n    const [loginError,setLoginError]=useState(\"\");\r\n    const history=useHistory();\r\n    const isLoggedIn=()=>{\r\n        if(localStorage.getItem(TOKEN)===null){\r\n          return false;\r\n        }\r\n        return true;\r\n    }\r\n    const handleKeypress = e => {\r\n        //it triggers by pressing the enter key\r\n        if (e.keyCode === 13) {\r\n          handleSubmit();\r\n        }\r\n      };\r\n      const handleSubmit=()=>{\r\n        setSubmitted(true)\r\n        console.log(JSON.stringify({email:email,password:password}))\r\n        // PUBLIC_API.post('/login',JSON.stringify({email:email,password:password})).then((response1)=>{\r\n        //   if(response1.data.status===true){\r\n        //     console.log(response1.data);\r\n        //     history.push({pathname:'/dashboard',user:{email:email,password:password}})\r\n        //     // history.push({pathname:'/otp-verification',user:{email:email,password:password}})\r\n        //     swal('OTP sent',response1.data.message,'success')\r\n        //   }\r\n        // }).catch(error=>{\r\n        //   setLoginError(\"Please provide correct credentials\");\r\n        //   console.log(error)\r\n        //   setSubmitted(false)\r\n        //   swal(\"Error!\",error.message,\"error\");\r\n        // })\r\n        setTimeout(()=>{\r\n          setSubmitted(false)\r\n          history.push({pathname:'/dashboard',user:{email:email,password:password}})\r\n        },4000)\r\n      }\r\n    return (\r\n        <>\r\n        {isLoggedIn() && <Redirect to=\"/dashboard\"/>}\r\n        <div className=\"c-app c-default-layout overlay-hero flex-row align-items-center\">\r\n          <CContainer>\r\n            <CRow className=\"justify-content-center\">\r\n              <CCol md=\"5\">\r\n                  <CCardGroup>\r\n                  <CCard className=\"p-4\">\r\n                      <CCardBody>\r\n                      <CForm>\r\n                          <h1>Sign In</h1>\r\n                          <p className=\"text-muted\">Sign In to your account</p>\r\n                          <CInputGroup className=\"mb-3\">\r\n                          <CInputGroupPrepend>\r\n                              <CInputGroupText>\r\n                              <CIcon name=\"cil-user\" />\r\n                              </CInputGroupText>\r\n                          </CInputGroupPrepend>\r\n                          <CInput value={email} onChange={(event)=>setEmail(event.target.value)} type=\"email\" placeholder=\"Email\" autoComplete=\"email\" />\r\n                          </CInputGroup>\r\n                          <CInputGroup className=\"mb-4\">\r\n                          <CInputGroupPrepend>\r\n                              <CInputGroupText>\r\n                              <CIcon name=\"cil-lock-locked\" />\r\n                              </CInputGroupText>\r\n                          </CInputGroupPrepend>\r\n                          <CInput onKeyDown={handleKeypress} type=\"password\" placeholder=\"Password\" autoComplete=\"current-password\" onChange={(event)=>setPassword(event.target.value)} value={password} />\r\n                          </CInputGroup>\r\n                          <CRow>\r\n                          <CCol xs=\"12\" md=\"12\">\r\n                            {submitted ? <div className={classes.root}> <LinearProgress color=\"primary\" /> </div>:<CButton color=\"primary\" className=\"px-4 custom-button\" onClick={handleSubmit}>Login</CButton>}\r\n                          </CCol>\r\n                          {/* <CCol xs=\"6\" className=\"text-right\">\r\n                              <CButton color=\"link\" className=\"px-0\">Forgot password?</CButton>\r\n                          </CCol> */}\r\n                          </CRow>\r\n                      </CForm>\r\n                      </CCardBody>\r\n                  </CCard>\r\n                  {/* <CCard className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' }}>\r\n                      <CCardBody className=\"text-center\">\r\n                      <div>\r\n                          <h2>Sign up</h2>\r\n                          <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut\r\n                          labore et dolore magna aliqua.</p>\r\n                          <Link to=\"/register\">\r\n                          <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>Register Now!</CButton>\r\n                          </Link>\r\n                      </div>\r\n                      </CCardBody>\r\n                  </CCard> */}\r\n                  </CCardGroup>\r\n                </CCol>\r\n            </CRow>\r\n          </CContainer>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login\r\n"],"sourceRoot":""}