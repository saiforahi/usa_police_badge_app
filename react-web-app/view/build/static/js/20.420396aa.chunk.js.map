{"version":3,"sources":["components/employees/Create.js"],"names":["CreateEmployee","useLocation","useHistory","useState","count","setCount","inputFile","useRef","avatar","setAvatar","image","setImage","email","setEmail","username","setUsername","first_name","setFirstName","last_name","setLastName","phone","setPhone","registration","setRegistration","address","setAddress","password","setPassword","confirm_password","setConfirmPassword","React","useEffect","className","md","alt","onClick","current","click","style","height","width","cursor","border","src","type","id","ref","display","onChange","event","file","target","files","URL","createObjectURL","value","placeholder","autoComplete","color","formData","FormData","append","undefined","FILE_API","post","then","res","console","log","data","success","swal","catch","err","response","update_profile"],"mappings":"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","file":"static/js/20.420396aa.chunk.js","sourcesContent":["import React,{useState,useRef} from 'react'\r\nimport { CCard, CRow,CCol,CCardBody,CCardFooter,CCardHeader,CLabel,CTextarea,CInput,CFormGroup,CButton,CImg } from '@coreui/react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport CIcon from \"@coreui/icons-react\"\r\nimport { BASE_URL, FILE_API, PUBLIC_API } from 'src/config'\r\nimport swal from 'sweetalert'\r\nconst CreateEmployee =()=>{\r\n    let location = useLocation()\r\n    let history = useHistory()\r\n    const [count,setCount] = useState(0)\r\n    const inputFile = useRef(null) \r\n    const [avatar,setAvatar] = useState()\r\n    const [image,setImage]=useState()\r\n    const [user_data,setUserData] = useState(null)\r\n    const [email,setEmail] = useState('')\r\n    const [username,setUsername]=useState('')\r\n    const [first_name,setFirstName]=useState('')\r\n    const [last_name,setLastName] = useState('')\r\n    const [phone,setPhone] = useState('')\r\n    const [registration,setRegistration] = useState('')\r\n    const [address,setAddress] = useState('')\r\n    const [password,setPassword] = useState()\r\n    const [confirm_password,setConfirmPassword]=useState()\r\n    const checkProp =()=>{\r\n        console.log(location.state)\r\n        if(location.state.employee == undefined){\r\n            history.push('/dashboard/employees')\r\n        }\r\n    }\r\n    function onImageChange(file){\r\n        setImage(file)\r\n        setAvatar(URL.createObjectURL(file))\r\n        //update_profile()\r\n    }\r\n    const onButtonClick = () => {\r\n        // `current` points to the mounted file input element\r\n       inputFile.current.click();\r\n    };\r\n    function update_profile(){\r\n        var formData = new FormData();\r\n        formData.append(\"username\", username);\r\n        formData.append(\"first_name\", first_name); // number 123456 is immediately converted to a string \"123456\"\r\n        formData.append(\"last_name\", last_name);\r\n        formData.append(\"phone\", phone);\r\n        formData.append(\"email\", email);\r\n        formData.append(\"address\", address);\r\n        formData.append(\"registration\", registration);\r\n        formData.append(\"password\", confirm_password);\r\n        // HTML file input, chosen by user\r\n        if(image!=undefined){\r\n            formData.append(\"profile_pic\", image);\r\n        }\r\n        FILE_API.post('employee/registration/',formData).then((res)=>{\r\n            console.log('update result ---- ',res.data)\r\n            if(res.data.success==\"True\"){\r\n                swal('Updated','Profile updated successfully','success')\r\n            }\r\n        }).catch((err)=>{\r\n            console.log('err -- ',err.response)\r\n        })\r\n    }\r\n    React.useEffect(()=>{\r\n        setCount(1)\r\n    },[count])\r\n    return(\r\n        <>\r\n        <CRow className=\"justify-content-center\">\r\n            <CCol md=\"8\">\r\n                <CCard>\r\n                    <CCardHeader>\r\n                        <h3>Add a new Employee</h3>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                            <CRow className=\"justify-content-center\">\r\n                                <CImg alt=\"click to upload image\" onClick={onButtonClick} className=\"mx-auto rounded-circle\" style={{height:\"100px\",width:\"115px\",cursor:\"pointer\",border:\"2px solid\"}}  src={avatar} />\r\n                            </CRow>\r\n                            <hr/>\r\n                            <CRow className=\"justify-content-center\">\r\n                                <input type='file' id='file' ref={inputFile} style={{display: 'none'}} onChange={(event)=>onImageChange(event.target.files[0])}/>\r\n                                {/* <CButton type=\"button\" onClick={onButtonClick}>change</CButton> */}\r\n                            </CRow>\r\n                            <CFormGroup className=\"mb-3\">\r\n                                <CLabel>Username</CLabel>\r\n                                <CInput value={username} onChange={(event)=>setUsername(event.target.value)} type=\"text\"  />\r\n                            </CFormGroup>\r\n                            <CFormGroup className=\"mb-3\">\r\n                                <CLabel>First Name</CLabel>\r\n                                <CInput value={first_name} onChange={(event)=>setFirstName(event.target.value)} type=\"text\"  />\r\n                            </CFormGroup>\r\n                            <CFormGroup className=\"mb-3\">\r\n                                <CLabel>Last Name</CLabel>\r\n                                <CInput value={last_name} onChange={(event)=>setLastName(event.target.value)} type=\"text\" />\r\n                            </CFormGroup>\r\n                            <CFormGroup className=\"mb-3\">\r\n                                <CLabel>Email</CLabel>\r\n                                <CInput value={email} onChange={(event)=>setEmail(event.target.value)} type=\"email\"  />\r\n                            </CFormGroup>\r\n                            <CFormGroup className=\"mb-4\">\r\n                                <CLabel>Phone</CLabel>\r\n                                <CInput type=\"text\" placeholder=\"Phone\" value={phone} onChange={(event)=>setPhone(event.target.value)}  />\r\n                            </CFormGroup>\r\n                            <CFormGroup className=\"mb-3\">\r\n                                <CLabel>Password</CLabel>\r\n                                <CInput value={password} onChange={(event)=>setPassword(event.target.value)} type=\"password\"  />\r\n                            </CFormGroup>\r\n                            <CFormGroup className=\"mb-3\">\r\n                                <CLabel>Confirm Password</CLabel>\r\n                                <CInput value={confirm_password} onChange={(event)=>{if(password == event.target.value)setConfirmPassword(event.target.value)}} type=\"password\"/>\r\n                            </CFormGroup>\r\n                            <CFormGroup className=\"mb-4\">\r\n                                <CLabel>Registration</CLabel>\r\n                                <CInput type=\"text\" placeholder=\"mac\" autoComplete=\"mac\" value={registration} onChange={(event)=>setRegistration(event.target.value)}  />\r\n                            </CFormGroup>\r\n                            <CFormGroup className=\"mb-4\">\r\n                                <CLabel>Address</CLabel>\r\n                                <CTextarea type=\"text\" placeholder=\"Phone\" value={address} onChange={(event)=>setAddress(event.target.value)} />\r\n                            </CFormGroup>\r\n                            {/* <CRow>\r\n                                <CCol xs=\"12\" md=\"12\">\r\n                                    \r\n                                </CCol>\r\n                            </CRow> */}\r\n                    </CCardBody>\r\n                    <CCardFooter>\r\n                        <CButton color=\"primary\" className=\"px-4\" type=\"button\" onClick={()=>update_profile()}>Create</CButton>\r\n                    </CCardFooter>\r\n                </CCard>\r\n            </CCol>\r\n        </CRow>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateEmployee"],"sourceRoot":""}