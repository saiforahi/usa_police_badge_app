{"version":3,"sources":["views/charts/ChartBarSimple.js","components/dashboard/Dashboard.js"],"names":["ChartBarSimple","props","backgroundColor","pointHoverBackgroundColor","dataPoints","label","attributes","pointed","defaultDatasets","data","getColor","barPercentage","categoryPercentage","defaultOptions","maintainAspectRatio","legend","display","scales","xAxes","yAxes","datasets","options","labels","defaultProps","WidgetsDropdown","React","lazy","Dashboard","useSelector","state","dashboard","notifications","ratings","ratingsTableData","forEach","rate","index","push","officer","first_name","last_name","user_id","nfc_number","Number","star","comment","Date","created_at","toLocaleDateString","dispatch","useDispatch","useEffect","fetchDashboardData","fetchNotificationsThunk","fetchRatingsThunk","activeTab","variant","className","sm","md","lg","id","class","undefined","Array","from","slice","map","rating","name","color","status","length","notification","nfc","user","type","style","height","marginTop","placeholder","items","fields","key","_style","width","_classes","light","hover","striped","bordered","sorter","columnFilter","size","itemsPerPage","pagination"],"mappings":"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","file":"static/js/3.2a44d32d.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { getColor } from '@coreui/utils'\r\nimport { CChartBar } from '@coreui/react-chartjs'\r\n\r\nconst ChartBarSimple = props => {\r\n\r\n  const {\r\n    backgroundColor,\r\n    pointHoverBackgroundColor,\r\n    dataPoints,\r\n    label,\r\n    pointed,\r\n    ...attributes\r\n  } = props\r\n\r\n  const defaultDatasets = (()=>{\r\n    return [\r\n      {\r\n        data: dataPoints,\r\n        backgroundColor: getColor(backgroundColor),\r\n        pointHoverBackgroundColor: getColor(pointHoverBackgroundColor),\r\n        label: label,\r\n        barPercentage: 0.5,\r\n        categoryPercentage: 1\r\n      }\r\n    ]\r\n  })()\r\n\r\n  const defaultOptions = (()=>{\r\n    return {\r\n      maintainAspectRatio: false,\r\n      legend: {\r\n        display: false\r\n      },\r\n      scales: {\r\n        xAxes: [{\r\n          display: false\r\n        }],\r\n        yAxes: [{\r\n          display: false\r\n        }]\r\n      }\r\n    }\r\n  })()\r\n\r\n  // render\r\n  return (\r\n    <CChartBar\r\n      {...attributes}\r\n      datasets={defaultDatasets}\r\n      options={defaultOptions}\r\n      labels={label}\r\n    />\r\n  )\r\n}\r\n\r\nChartBarSimple.propTypes = {\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string,\r\n  //\r\n  backgroundColor: PropTypes.string,\r\n  pointHoverBackgroundColor: PropTypes.string,\r\n  dataPoints: PropTypes.array,\r\n  label: PropTypes.string,\r\n  pointed: PropTypes.bool\r\n};\r\n\r\nChartBarSimple.defaultProps = {\r\n  backgroundColor: 'rgba(0,0,0,.2)',\r\n  dataPoints: [10, 22, 34, 46, 89,56],\r\n  label: 'Count'\r\n};\r\n\r\nexport default ChartBarSimple\r\n","import {\r\n  CCol,\r\n  CRow,\r\n  CTabs,\r\n  CNav,\r\n  CNavLink,\r\n  CNavItem,\r\n  CTabContent,\r\n  CTabPane,\r\n  CInput,\r\n  CCardBody,\r\n  CForm,\r\n  CCard,\r\n  CButton,\r\n  CBadge,\r\n  CDataTable,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport { fetchDashboardData } from \"src/store/slices/DashboardSlice\";\r\nimport MainChartExample from \"../../views/charts/ChartBarSimple\";\r\nimport \"./Dashboard.css\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport { fetchNotificationsThunk } from \"src/store/slices/NotificationSlice\";\r\nimport { fetchRatingsThunk } from \"src/store/slices/RatingSlice\";\r\nconst WidgetsDropdown = React.lazy(() =>\r\n  import(\"../../views/widgets/WidgetsDropdown.js\")\r\n);\r\n\r\nconst Dashboard = () => {\r\n  const data = useSelector(state => state.dashboard);\r\n  const notifications = useSelector(state => state.notifications)\r\n  const ratings = useSelector(state => state.ratings.data)\r\n  const ratingsTableData=useSelector(state=>{\r\n    let data = []\r\n    state.ratings.data.forEach((rate,index)=>{\r\n      data.push({'#':index+1,'Employee Name': rate.officer.first_name+' '+rate.officer.last_name, 'Badge Number':rate.officer.user_id[0].nfc_number,'Rating':Number(rate.star),'Feedback':rate.comment,'Date':new Date(rate.created_at).toLocaleDateString()})\r\n    })\r\n    return data\r\n  })\r\n  const dispatch = useDispatch()\r\n  \r\n  React.useEffect(() => {\r\n    dispatch(fetchDashboardData())\r\n    dispatch(fetchNotificationsThunk())\r\n    dispatch(fetchRatingsThunk())\r\n  }, []);\r\n  return (\r\n    <>\r\n      {/**tab panes */}\r\n      <CTabs activeTab=\"quick\">\r\n        <CNav variant=\"tabs\" className=\"tab-style\">\r\n          <CNavItem>\r\n            <CNavLink data-tab=\"quick\" className=\"special\">\r\n              Quick Look\r\n            </CNavLink>\r\n          </CNavItem>\r\n          <CNavItem>\r\n            <CNavLink data-tab=\"search\" className=\"special\">\r\n              Search\r\n            </CNavLink>\r\n          </CNavItem>\r\n        </CNav>\r\n        <CTabContent>\r\n          <CTabPane data-tab=\"quick\">\r\n            <WidgetsDropdown data={data.data} />\r\n            <CRow>\r\n              {/**show ratings */}\r\n              <CCol sm=\"12\" md=\"7\" lg=\"8\">\r\n                <h4 id=\"traffic\" className=\"card-title mb-0\">Recent Ratings (Live Feed)</h4>   \r\n                <div class=\"rating-holder mt-4\">\r\n                  <CRow>\r\n                    {ratings!=undefined && Array.from(ratings.slice(0,9)).map((rating)=>(\r\n                      <CCol sm=\"12\" md=\"6\" lg=\"4\">\r\n                        <CCard className=\"review-cards\">\r\n                          <CCardBody>\r\n                            <p className=\"time\"><CIcon name=\"cil-clock\" />{\" \"}<span> A moment ago </span></p>\r\n                            <p className=\"person-name\">{rating.officer.first_name}</p>\r\n                            <p class=\"feedback\"></p>\r\n                            <p class=\"review\">4 stars by {rating.name}</p>\r\n                            <p className=\"review-text\">{'\"'+rating.comment+'\"'}</p>\r\n                          </CCardBody>\r\n                        </CCard>\r\n                      </CCol>\r\n                    ))}\r\n                  </CRow>\r\n                </div>       \r\n              </CCol>\r\n              {/**latest scans show */}\r\n              <CCol sm=\"12\" md=\"5\" lg=\"4\">\r\n                <CCard className=\"noti-holder\">\r\n                  <CCardBody>\r\n                    <div class=\"scan-header\">\r\n                      <h5 className=\"angle-left\">Recent Scans</h5>\r\n                      <CButton color=\"primary\" className=\"angle-right\">\r\n                        {notifications.status=='succeeded'?'Total':'loading'} <CBadge color=\"info\">{notifications.data.length}</CBadge>\r\n                        <span className=\"visually-hidden\">unread messages</span>\r\n                      </CButton>\r\n                    </div>\r\n                    <div class=\"card-div mt-2 pb-1 pr-3\">\r\n                      {notifications!= undefined && Array.from(notifications.data.slice(0,10)).map((notification)=>(\r\n                        <CCard className=\"show-scans\">\r\n                          <CCardBody>\r\n                            <p>\r\n                              Badge No: {notification.nfc.nfc_number} of {notification.nfc.user.first_name+' '+notification.nfc.user.last_name} was\r\n                              scanned near Broward\r\n                            </p>\r\n                            {/* <p>\r\n                              <CIcon name=\"cil-clock\" />{\" \"}\r\n                              <span> A moment ago </span>\r\n                            </p> */}\r\n                          </CCardBody>\r\n                        </CCard>\r\n                      ))}\r\n                      <CButton className=\"ml-2\" type=\"button\" variant=\"outline\" color=\"primary\">View all</CButton>\r\n                    </div>\r\n                  </CCardBody>\r\n                </CCard>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow>\r\n            <CCol sm=\"12\" md=\"12\" lg=\"12\">\r\n                <CCard>\r\n                  <CCardBody>\r\n                    <CRow>\r\n                      <CCol sm=\"5\">\r\n                        <h4 id=\"traffic\" className=\"card-title mb-0\">\r\n                          Ratings\r\n                        </h4>\r\n                        <div className=\"small text-muted\">\r\n                          {new Date().toLocaleDateString()}\r\n                        </div>\r\n                      </CCol>\r\n                      <CCol sm=\"7\" className=\"d-none d-md-block\">\r\n                        <CButton color=\"primary\" className=\"float-right\">\r\n                          <CIcon name=\"cil-cloud-download\" />\r\n                        </CButton>\r\n                      </CCol>\r\n                    </CRow>\r\n\r\n                    <MainChartExample\r\n                      style={{ height: \"300px\", marginTop: \"40px\" }}\r\n                    />\r\n                  </CCardBody>\r\n                </CCard>\r\n              </CCol>\r\n            </CRow>\r\n          </CTabPane>\r\n          <CTabPane data-tab=\"search\">\r\n            <h4 className=\"table-header mt-3 text-center \">Ratings</h4>\r\n            <CForm className=\"d-flex custom-form mt-2\">\r\n              <CInput type=\"search\" className=\"me-2\" placeholder=\"Search\" />\r\n              <CButton type=\"submit\" color=\"primary\" variant=\"outline\">\r\n                Search\r\n              </CButton>\r\n            </CForm>\r\n            <CCard className=\"mt-2\">\r\n              <CCardBody>\r\n                <CDataTable\r\n                  items={ratingsTableData}\r\n                  fields={[\r\n                    {\r\n                      key: \"#\",\r\n                      _style: { width: \"5%\" },\r\n                      _classes: \"font-weight-bold\",\r\n                    },\r\n                    \"Employee Name\",\r\n                    \"Badge Number\",\r\n                    \"Rating\",\r\n                    \"Feedback\",\r\n                    \"Date\",\r\n                  ]}\r\n                  light\r\n                  hover\r\n                  striped\r\n                  bordered\r\n                  sorter\r\n                  columnFilter\r\n                  // clickableRows\r\n                  // onRowClick={(row)=>{\r\n                  //     history.push({\r\n                  //         pathname: '/dashboard/employees/details',\r\n                  //         state: { employee: row }\r\n                  //     })\r\n                  // }}\r\n                  size=\"sm\"\r\n                  itemsPerPage={10}\r\n                  pagination\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          </CTabPane>\r\n        </CTabContent>\r\n      </CTabs>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"sourceRoot":""}