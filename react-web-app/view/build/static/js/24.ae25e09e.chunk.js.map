{"version":3,"sources":["components/employees/Create.js"],"names":["CreateEmployee","useLocation","useHistory","useState","count","setCount","inputFile","useRef","avatar","setAvatar","image","setImage","email","setEmail","username","setUsername","first_name","setFirstName","last_name","setLastName","phone","setPhone","registration","setRegistration","address","setAddress","password","setPassword","confirm_password","setConfirmPassword","React","useEffect","className","md","class","alt","src","onClick","current","click","name","type","id","ref","style","display","onChange","event","file","target","files","URL","createObjectURL","value","placeholder","autoComplete","custom","hidden","color","formData","FormData","append","undefined","FILE_API","post","then","res","console","log","data","success","swal","catch","err","response","update_profile"],"mappings":"0PAuOeA,UAjNQ,WACNC,cACDC,cADd,IAEA,EAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAYC,iBAAO,MACzB,EAA4BJ,qBAA5B,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAA0BN,qBAA1B,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAAiCR,mBAAS,MAA1C,mBACA,GADA,UAC0BA,mBAAS,KAAnC,mBAAOS,EAAP,KAAcC,EAAd,KACA,EAAgCV,mBAAS,IAAzC,mBAAOW,EAAP,KAAiBC,EAAjB,KACA,EAAmCZ,mBAAS,IAA5C,mBAAOa,EAAP,KAAmBC,EAAnB,KACA,EAAiCd,mBAAS,IAA1C,mBAAOe,EAAP,KAAkBC,EAAlB,KACA,EAA0BhB,mBAAS,IAAnC,mBAAOiB,EAAP,KAAcC,EAAd,KACA,EAAwClB,mBAAS,IAAjD,mBAAOmB,EAAP,KAAqBC,EAArB,KACA,EAA8BpB,mBAAS,IAAvC,mBAAOqB,EAAP,KAAgBC,EAAhB,KACA,EAAgCtB,qBAAhC,mBAAOuB,GAAP,KAAiBC,GAAjB,KACA,GAA+CxB,qBAA/C,qBAAOyB,GAAP,MAAyBC,GAAzB,MA4CA,OAHAC,IAAMC,WAAU,WACd1B,EAAS,KACR,CAACD,IAEF,mCACE,cAAC,IAAD,CAAM4B,UAAU,yBAAhB,SACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,sDAEF,eAAC,IAAD,WACE,cAAC,IAAD,CAAMD,UAAU,yBAAhB,SACE,sBAAKE,MAAM,qCAAX,UACE,cAAC,IAAD,CACEC,IAAI,wBACJH,UAAU,oCACVI,IAAK5B,IAKP,yBAAQ6B,QAnDF,WAEpB/B,EAAUgC,QAAQC,SAiD4BP,UAAU,uCAA1C,UACG,IACD,cAAC,IAAD,CAAOQ,KAAK,eAFd,uBAMJ,uBACA,cAAC,IAAD,CAAMR,UAAU,yBAAhB,SACE,uBACES,KAAK,OACLC,GAAG,OACHC,IAAKrC,EACLsC,MAAO,CAAEC,QAAS,QAClBC,SAAU,SAACC,GAAD,OArEHC,EAqE4BD,EAAME,OAAOC,MAAM,GApEpEvC,EAASqC,QACTvC,EAAU0C,IAAIC,gBAAgBJ,IAFhC,IAAuBA,OAyEX,eAAC,IAAD,CAAYhB,UAAU,OAAtB,UACE,cAAC,IAAD,uBACA,cAAC,IAAD,CACEqB,MAAOvC,EACPgC,SAAU,SAACC,GAAD,OAAWhC,EAAYgC,EAAME,OAAOI,QAC9CZ,KAAK,YAGT,eAAC,IAAD,CAAYT,UAAU,OAAtB,UACE,cAAC,IAAD,yBACA,cAAC,IAAD,CACEqB,MAAOrC,EACP8B,SAAU,SAACC,GAAD,OAAW9B,EAAa8B,EAAME,OAAOI,QAC/CZ,KAAK,YAGT,eAAC,IAAD,CAAYT,UAAU,OAAtB,UACE,cAAC,IAAD,wBACA,cAAC,IAAD,CACEqB,MAAOnC,EACP4B,SAAU,SAACC,GAAD,OAAW5B,EAAY4B,EAAME,OAAOI,QAC9CZ,KAAK,YAGT,eAAC,IAAD,CAAYT,UAAU,OAAtB,UACE,cAAC,IAAD,oBACA,cAAC,IAAD,CACEqB,MAAOzC,EACPkC,SAAU,SAACC,GAAD,OAAWlC,EAASkC,EAAME,OAAOI,QAC3CZ,KAAK,aAGT,eAAC,IAAD,CAAYT,UAAU,OAAtB,UACE,cAAC,IAAD,oBACA,cAAC,IAAD,CACES,KAAK,OACLa,YAAY,QACZD,MAAOjC,EACP0B,SAAU,SAACC,GAAD,OAAW1B,EAAS0B,EAAME,OAAOI,aAG/C,eAAC,IAAD,CAAYrB,UAAU,OAAtB,UACE,cAAC,IAAD,uBACA,cAAC,IAAD,CACEqB,MAAO3B,GACPoB,SAAU,SAACC,GAAD,OAAWpB,GAAYoB,EAAME,OAAOI,QAC9CZ,KAAK,gBAGT,eAAC,IAAD,CAAYT,UAAU,OAAtB,UACE,cAAC,IAAD,+BACA,cAAC,IAAD,CACEqB,MAAOzB,GACPkB,SAAU,SAACC,GACLrB,IAAYqB,EAAME,OAAOI,OAC3BxB,GAAmBkB,EAAME,OAAOI,QAEpCZ,KAAK,gBAGT,eAAC,IAAD,CAAYT,UAAU,OAAtB,UACE,cAAC,IAAD,2BACA,cAAC,IAAD,CACES,KAAK,OACLa,YAAY,MACZC,aAAa,MACbF,MAAO/B,EACPwB,SAAU,SAACC,GAAD,OAAWxB,EAAgBwB,EAAME,OAAOI,aAGtD,eAAC,IAAD,CAAYrB,UAAU,OAAtB,UACE,cAAC,IAAD,sBACA,cAAC,KAAD,CACES,KAAK,OACLa,YAAY,QACZD,MAAO7B,EACPsB,SAAU,SAACC,GAAD,OAAWtB,EAAWsB,EAAME,OAAOI,aAGjD,eAAC,IAAD,CAAYrB,UAAU,OAAtB,UACE,cAAC,IAAD,8BACA,eAAC,IAAD,CAASwB,QAAM,EAAChB,KAAK,YAAYE,GAAG,YAApC,UACc,wBAAQe,QAAM,EAAd,6BACA,wBAAQJ,MAAM,IAAd,wBACA,wBAAQA,MAAM,IAAd,0BACA,wBAAQA,MAAM,IAAd,8BACA,wBAAQA,MAAM,IAAd,4BACA,wBAAQA,MAAM,IAAd,gCASlB,cAAC,IAAD,UACE,cAAC,IAAD,CACEK,MAAM,UACN1B,UAAU,OACVS,KAAK,SACLJ,QAAS,kBArKvB,WACE,IAAIsB,EAAW,IAAIC,SACnBD,EAASE,OAAO,WAAY/C,GAC5B6C,EAASE,OAAO,aAAc7C,GAC9B2C,EAASE,OAAO,YAAa3C,GAC7ByC,EAASE,OAAO,QAASzC,GACzBuC,EAASE,OAAO,QAASjD,GACzB+C,EAASE,OAAO,UAAWrC,GAC3BmC,EAASE,OAAO,eAAgBvC,GAChCqC,EAASE,OAAO,WAAYjC,SAEfkC,GAATpD,GACFiD,EAASE,OAAO,cAAenD,GAEjCqD,IAASC,KAAK,yBAA0BL,GACrCM,MAAK,SAACC,GACLC,QAAQC,IAAI,sBAAuBF,EAAIG,MACf,QAApBH,EAAIG,KAAKC,SACXC,IAAK,UAAW,+BAAgC,cAGnDC,OAAM,SAACC,GACNN,QAAQC,IAAI,UAAWK,EAAIC,aA+IJC,IAJjB","file":"static/js/24.ae25e09e.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { CIcon } from \"@coreui/icons-react\";\r\nimport {\r\n  CCard,\r\n  CRow,\r\n  CCol,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CLabel,\r\n  CTextarea,\r\n  CInput,\r\n  CFormGroup,\r\n  CButton,\r\n  CImg,\r\n  CSelect\r\n} from \"@coreui/react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport { BASE_URL, FILE_API, PUBLIC_API } from \"src/config\";\r\nimport swal from \"sweetalert\";\r\nimport \"../employees/Create.css\";\r\nconst CreateEmployee = () => {\r\n  let location = useLocation();\r\n  let history = useHistory();\r\n  const [count, setCount] = useState(0);\r\n  const inputFile = useRef(null);\r\n  const [avatar, setAvatar] = useState();\r\n  const [image, setImage] = useState();\r\n  const [user_data, setUserData] = useState(null);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [first_name, setFirstName] = useState(\"\");\r\n  const [last_name, setLastName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [registration, setRegistration] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [password, setPassword] = useState();\r\n  const [confirm_password, setConfirmPassword] = useState();\r\n  const checkProp = () => {\r\n    console.log(location.state);\r\n    if (location.state.employee == undefined) {\r\n      history.push(\"/dashboard/employees\");\r\n    }\r\n  };\r\n  function onImageChange(file) {\r\n    setImage(file);\r\n    setAvatar(URL.createObjectURL(file));\r\n    //update_profile()\r\n  }\r\n  const onButtonClick = () => {\r\n    // `current` points to the mounted file input element\r\n    inputFile.current.click();\r\n  };\r\n  function update_profile() {\r\n    var formData = new FormData();\r\n    formData.append(\"username\", username);\r\n    formData.append(\"first_name\", first_name); // number 123456 is immediately converted to a string \"123456\"\r\n    formData.append(\"last_name\", last_name);\r\n    formData.append(\"phone\", phone);\r\n    formData.append(\"email\", email);\r\n    formData.append(\"address\", address);\r\n    formData.append(\"registration\", registration);\r\n    formData.append(\"password\", confirm_password);\r\n    // HTML file input, chosen by user\r\n    if (image != undefined) {\r\n      formData.append(\"profile_pic\", image);\r\n    }\r\n    FILE_API.post(\"employee/registration/\", formData)\r\n      .then((res) => {\r\n        console.log(\"update result ---- \", res.data);\r\n        if (res.data.success == \"True\") {\r\n          swal(\"Updated\", \"Profile Created successfully\", \"success\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"err -- \", err.response);\r\n      });\r\n  }\r\n  React.useEffect(() => {\r\n    setCount(1);\r\n  }, [count]);\r\n  return (\r\n    <>\r\n      <CRow className=\"justify-content-center\">\r\n        <CCol md=\"8\">\r\n          <CCard>\r\n            <CCardHeader>\r\n              <h3>Add a new Employee</h3>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CRow className=\"justify-content-center\">\r\n                <div class=\"seller-profile-pic-div text-center\">\r\n                  <CImg\r\n                    alt=\"click to upload image\"\r\n                    className=\"mx-auto rounded-circle update-img\"\r\n                    src={avatar}\r\n                  />\r\n\r\n                  {/**__PRO PIC UP BUTTON__ */}\r\n\r\n                  <button onClick={onButtonClick} className=\"d-block mx-auto btn btn-primary mt-1\">\r\n                    {\" \"}\r\n                    <CIcon name=\"cil-camera\"></CIcon> Add Picture\r\n                  </button>\r\n                </div>\r\n              </CRow>\r\n              <hr />\r\n              <CRow className=\"justify-content-center\">\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"file\"\r\n                  ref={inputFile}\r\n                  style={{ display: \"none\" }}\r\n                  onChange={(event) => onImageChange(event.target.files[0])}\r\n                />\r\n                {/* <CButton type=\"button\" onClick={onButtonClick}>change</CButton> */}\r\n              </CRow>\r\n              <CFormGroup className=\"mb-3\">\r\n                <CLabel>Username</CLabel>\r\n                <CInput\r\n                  value={username}\r\n                  onChange={(event) => setUsername(event.target.value)}\r\n                  type=\"text\"\r\n                />\r\n              </CFormGroup>\r\n              <CFormGroup className=\"mb-3\">\r\n                <CLabel>First Name</CLabel>\r\n                <CInput\r\n                  value={first_name}\r\n                  onChange={(event) => setFirstName(event.target.value)}\r\n                  type=\"text\"\r\n                />\r\n              </CFormGroup>\r\n              <CFormGroup className=\"mb-3\">\r\n                <CLabel>Last Name</CLabel>\r\n                <CInput\r\n                  value={last_name}\r\n                  onChange={(event) => setLastName(event.target.value)}\r\n                  type=\"text\"\r\n                />\r\n              </CFormGroup>\r\n              <CFormGroup className=\"mb-3\">\r\n                <CLabel>Email</CLabel>\r\n                <CInput\r\n                  value={email}\r\n                  onChange={(event) => setEmail(event.target.value)}\r\n                  type=\"email\"\r\n                />\r\n              </CFormGroup>\r\n              <CFormGroup className=\"mb-4\">\r\n                <CLabel>Phone</CLabel>\r\n                <CInput\r\n                  type=\"text\"\r\n                  placeholder=\"Phone\"\r\n                  value={phone}\r\n                  onChange={(event) => setPhone(event.target.value)}\r\n                />\r\n              </CFormGroup>\r\n              <CFormGroup className=\"mb-3\">\r\n                <CLabel>Password</CLabel>\r\n                <CInput\r\n                  value={password}\r\n                  onChange={(event) => setPassword(event.target.value)}\r\n                  type=\"password\"\r\n                />\r\n              </CFormGroup>\r\n              <CFormGroup className=\"mb-3\">\r\n                <CLabel>Confirm Password</CLabel>\r\n                <CInput\r\n                  value={confirm_password}\r\n                  onChange={(event) => {\r\n                    if (password == event.target.value)\r\n                      setConfirmPassword(event.target.value);\r\n                  }}\r\n                  type=\"password\"\r\n                />\r\n              </CFormGroup>\r\n              <CFormGroup className=\"mb-4\">\r\n                <CLabel>Registration</CLabel>\r\n                <CInput\r\n                  type=\"text\"\r\n                  placeholder=\"mac\"\r\n                  autoComplete=\"mac\"\r\n                  value={registration}\r\n                  onChange={(event) => setRegistration(event.target.value)}\r\n                />\r\n              </CFormGroup>\r\n              <CFormGroup className=\"mb-3\">\r\n                <CLabel>Address</CLabel>\r\n                <CTextarea\r\n                  type=\"text\"\r\n                  placeholder=\"Phone\"\r\n                  value={address}\r\n                  onChange={(event) => setAddress(event.target.value)}\r\n                />\r\n              </CFormGroup>\r\n              <CFormGroup className=\"mb-4\">\r\n                <CLabel>Supervisor Name</CLabel>\r\n                <CSelect custom name=\"superName\" id=\"superName\">\r\n                              <option hidden>Supervisor Name</option>\r\n                              <option value=\"1\">Imon Karim</option>\r\n                              <option value=\"2\">Ratan Hassan</option>\r\n                              <option value=\"3\">Santiago Vasquez</option>\r\n                              <option value=\"4\">Hasibul Hassan</option>\r\n                              <option value=\"5\">Saif Azad</option>\r\n                            </CSelect>\r\n              </CFormGroup>\r\n              {/* <CRow>\r\n                                <CCol xs=\"12\" md=\"12\">\r\n                                    \r\n                                </CCol>\r\n                            </CRow> */}\r\n            </CCardBody>\r\n            <CCardFooter>\r\n              <CButton\r\n                color=\"primary\"\r\n                className=\"px-4\"\r\n                type=\"button\"\r\n                onClick={() => update_profile()}\r\n              >\r\n                Create\r\n              </CButton>\r\n            </CCardFooter>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateEmployee;\r\n"],"sourceRoot":""}