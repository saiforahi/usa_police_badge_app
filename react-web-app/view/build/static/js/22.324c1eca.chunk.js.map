{"version":3,"sources":["components/employees/Employees.js"],"names":["Employees","history","useHistory","useState","empList","setEmpList","React","useEffect","PUBLIC_API","get","then","res","console","log","data","success","index","length","element","push","id","first_name","last_name","email","phone","catch","err","response","onClick","color","type","md","items","fields","key","_style","width","_classes","label","sorter","filter","light","hover","striped","bordered","columnFilter","size","itemsPerPage","pagination","scopedSlots","item","swal","pathname","state","employee"],"mappings":"mNAmFeA,UA9EC,WACZ,IAAIC,EAAUC,cACd,EAA2BC,mBAAS,IAApC,mBAAOC,EAAP,KAAeC,EAAf,KAiBA,OAfAC,IAAMC,WAAU,WACZC,IAAWC,IAAI,kBAAkBC,MAAK,SAACC,GAEnC,GADAC,QAAQC,IAAI,kBAAkBF,EAAIG,MACX,QAApBH,EAAIG,KAAKC,QAAkB,CAE1B,IADA,IAAID,EAAK,GACAE,EAAQ,EAAGA,EAAQL,EAAIG,KAAKA,KAAKG,OAAQD,IAAS,CACvD,IAAME,EAAUP,EAAIG,KAAKA,KAAKE,GAC9BF,EAAKK,KAAK,CAAC,IAAIH,EAAM,EAAEI,GAAGF,EAAQE,GAAG,KAAOF,EAAQG,WAAW,IAAIH,EAAQI,UAAU,MAAQJ,EAAQK,MAAM,MAAQL,EAAQM,MAAO,cAAc,GAAG,gBAAgB,GAAG,MAAQ,GAAG,eAAe,KAEpMnB,EAAWS,OAEhBW,OAAM,SAACC,GACNd,QAAQC,IAAIa,EAAIC,eAEtB,IAEE,qCACA,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAASC,QAAS,WAAK3B,EAAQkB,KAAK,gCAAiCU,MAAM,UAAUC,KAAK,SAA1F,qBAGR,uBACA,cAAC,IAAD,UACI,cAAC,IAAD,CAAMC,GAAG,KAAT,SACI,eAAC,IAAD,WACI,cAAC,IAAD,UACI,6CAEJ,cAAC,IAAD,UACI,cAAC,IAAD,CACAC,MAAO5B,EACP6B,OAAQ,CACJ,CAAEC,IAAK,IAAIC,OAAQ,CAAEC,MAAO,MAAQC,SAAU,oBAC9C,OAAO,QAAQ,cAAc,gBAAgB,QAAQ,eAAe,CAACH,IAAI,SAASI,MAAM,GAAGH,OAAQ,CAAEC,MAAO,OAAQG,QAAO,EAAMC,QAAO,IAE5IC,OAAK,EACLC,OAAK,EACLC,SAAO,EACPC,UAAQ,EACRL,QAAM,EACNM,cAAY,EAQZC,KAAK,KACLC,aAAc,GACdC,YAAU,EACVC,YAAe,CACX,OACA,SAACC,GAAD,OACI,6BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAStB,QAAS,WAAQuB,IAAK,UAAU,0CAA0C,YAAarB,KAAK,SAASgB,KAAK,KAAKjB,MAAM,SAA9H,oBADJ,IAC4J,cAAC,IAAD,CAASD,QAAS,WAAK3B,EAAQkB,KAAK,CAACiC,SAAU,+BAA+BC,MAAO,CAAEC,SAAUJ,MAAWJ,KAAK,KAAKhB,KAAK,SAASD,MAAM,UAA1I,6BAO5K,cAAC,IAAD","file":"static/js/22.324c1eca.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { CCard, CRow,CCol,CCardBody,CCardFooter,CCardHeader,CDataTable,CBadge,CButton } from '@coreui/react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { PUBLIC_API } from 'src/config'\r\nimport swal from 'sweetalert'\r\nconst Employees=()=>{\r\n    let history = useHistory()\r\n    const [empList,setEmpList]=useState([])\r\n    \r\n    React.useEffect(()=>{\r\n        PUBLIC_API.get('employee/list/').then((res)=>{\r\n            console.log('empl list ---- ',res.data)\r\n            if(res.data.success == \"True\"){\r\n                var data=[];\r\n                for (let index = 0; index < res.data.data.length; index++) {\r\n                    const element = res.data.data[index];\r\n                    data.push({'#':index+1,id:element.id,\"Name\":element.first_name+' '+element.last_name,\"Email\":element.email,\"Phone\":element.phone, \"Assigned To\":'',\"Assigned Date\":'',\"Scans\":'',\"Global Scans\":\"\"});\r\n                }\r\n                setEmpList(data);\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err.response)\r\n        })\r\n    },[])\r\n    return(\r\n        <>\r\n        <CRow>\r\n            <CCol>\r\n                <CButton onClick={()=>{history.push('/dashboard/employees/create')}} color=\"primary\" type=\"button\">Add</CButton>\r\n            </CCol>\r\n        </CRow>\r\n        <hr/>\r\n        <CRow>\r\n            <CCol md=\"12\">\r\n                <CCard>\r\n                    <CCardHeader>\r\n                        <h3>Employees</h3>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                        <CDataTable\r\n                        items={empList}\r\n                        fields={[\r\n                            { key: '#',_style: { width: '5%' }, _classes: 'font-weight-bold' },\r\n                            'Name','Email','Assigned To','Assigned Date','Scans','Global Scans',{key:'Action',label:'',_style: { width: '12%' },sorter:false,filter:false}\r\n                        ]}\r\n                        light\r\n                        hover\r\n                        striped\r\n                        bordered\r\n                        sorter\r\n                        columnFilter\r\n                        // clickableRows\r\n                        // onRowClick={(row)=>{\r\n                        //     history.push({\r\n                        //         pathname: '/dashboard/employees/details',\r\n                        //         state: { employee: row }\r\n                        //     })\r\n                        // }}\r\n                        size=\"sm\"\r\n                        itemsPerPage={10}\r\n                        pagination\r\n                        scopedSlots = {{\r\n                            'Action':\r\n                            (item)=>(\r\n                                <td>\r\n                                    <CBadge>\r\n                                        <CButton onClick={() => { swal('Warning','This service is not available right now','warning')}} type=\"button\" size=\"sm\" color=\"danger\">Delete</CButton> <CButton onClick={()=>{history.push({pathname: '/dashboard/employees/details',state: { employee: item }})}} size=\"sm\" type=\"button\" color=\"primary\">Edit</CButton>\r\n                                    </CBadge>\r\n                                </td>\r\n                            )\r\n                        }}\r\n                        />\r\n                    </CCardBody>\r\n                    <CCardFooter>\r\n                        \r\n                    </CCardFooter>\r\n                </CCard>\r\n            </CCol>\r\n        </CRow>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Employees"],"sourceRoot":""}