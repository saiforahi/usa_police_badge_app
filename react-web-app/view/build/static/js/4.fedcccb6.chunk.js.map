{"version":3,"sources":["views/charts/ChartBarSimple.js","components/dashboard/Dashboard.js"],"names":["ChartBarSimple","props","backgroundColor","pointHoverBackgroundColor","dataPoints","label","attributes","pointed","defaultDatasets","data","getColor","barPercentage","categoryPercentage","defaultOptions","maintainAspectRatio","legend","display","scales","xAxes","yAxes","datasets","options","labels","defaultProps","WidgetsDropdown","React","lazy","Dashboard","useState","count","useEffect","console","log","sm","id","className","Date","toLocaleDateString","color","name","style","height","marginTop"],"mappings":"iQAKMA,EAAiB,SAAAC,GAErB,IACEC,EAMED,EANFC,gBACAC,EAKEF,EALFE,0BACAC,EAIEH,EAJFG,WACAC,EAGEJ,EAHFI,MAEGC,GACDL,EAFFM,QALF,YAOIN,EAPJ,IASMO,EACG,CACL,CACEC,KAAML,EACNF,gBAAiBQ,mBAASR,GAC1BC,0BAA2BO,mBAASP,GACpCE,MAAOA,EACPM,cAAe,GACfC,mBAAoB,IAKpBC,EACG,CACLC,qBAAqB,EACrBC,OAAQ,CACNC,SAAS,GAEXC,OAAQ,CACNC,MAAO,CAAC,CACNF,SAAS,IAEXG,MAAO,CAAC,CACNH,SAAS,MAOjB,OACE,cAAC,IAAD,2BACMV,GADN,IAEEc,SAAUZ,EACVa,QAASR,EACTS,OAAQjB,MAgBdL,EAAeuB,aAAe,CAC5BrB,gBAAiB,iBACjBE,WAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzDC,MAAO,SAGML,O,iHCpETwB,EAAkBC,IAAMC,MAAK,kBAAM,kCAmG1BC,UAjGC,WACZ,MAAuBF,IAAMG,SAAS,GAAtC,mBAAOC,EAAP,UAKA,OAHAJ,IAAMK,WAAU,WACZC,QAAQC,IAAI,uBACZ,CAACH,IAED,qCACA,cAACL,EAAD,IACA,cAAC,IAAD,UACA,eAAC,IAAD,WACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAMS,GAAG,IAAT,UACE,oBAAIC,GAAG,UAAUC,UAAU,kBAA3B,gCACA,qBAAKA,UAAU,mBAAf,UAAmC,IAAIC,MAAOC,0BAEhD,cAAC,IAAD,CAAMJ,GAAG,IAAIE,UAAU,oBAAvB,SACE,cAAC,IAAD,CAASG,MAAM,UAAUH,UAAU,cAAnC,SACE,cAAC,IAAD,CAAOI,KAAK,8BAkBlB,cAAC,IAAD,CAAkBC,MAAO,CAACC,OAAQ,QAASC,UAAW","file":"static/js/4.fedcccb6.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { getColor } from '@coreui/utils'\r\nimport { CChartBar } from '@coreui/react-chartjs'\r\n\r\nconst ChartBarSimple = props => {\r\n\r\n  const {\r\n    backgroundColor,\r\n    pointHoverBackgroundColor,\r\n    dataPoints,\r\n    label,\r\n    pointed,\r\n    ...attributes\r\n  } = props\r\n\r\n  const defaultDatasets = (()=>{\r\n    return [\r\n      {\r\n        data: dataPoints,\r\n        backgroundColor: getColor(backgroundColor),\r\n        pointHoverBackgroundColor: getColor(pointHoverBackgroundColor),\r\n        label: label,\r\n        barPercentage: 0.5,\r\n        categoryPercentage: 1\r\n      }\r\n    ]\r\n  })()\r\n\r\n  const defaultOptions = (()=>{\r\n    return {\r\n      maintainAspectRatio: false,\r\n      legend: {\r\n        display: false\r\n      },\r\n      scales: {\r\n        xAxes: [{\r\n          display: false\r\n        }],\r\n        yAxes: [{\r\n          display: false\r\n        }]\r\n      }\r\n    }\r\n  })()\r\n\r\n  // render\r\n  return (\r\n    <CChartBar\r\n      {...attributes}\r\n      datasets={defaultDatasets}\r\n      options={defaultOptions}\r\n      labels={label}\r\n    />\r\n  )\r\n}\r\n\r\nChartBarSimple.propTypes = {\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string,\r\n  //\r\n  backgroundColor: PropTypes.string,\r\n  pointHoverBackgroundColor: PropTypes.string,\r\n  dataPoints: PropTypes.array,\r\n  label: PropTypes.string,\r\n  pointed: PropTypes.bool\r\n};\r\n\r\nChartBarSimple.defaultProps = {\r\n  backgroundColor: 'rgba(0,0,0,.2)',\r\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\r\n  label: 'Sales'\r\n};\r\n\r\nexport default ChartBarSimple\r\n","import { CCol, CRow, CProgress,CCardBody,CCardFooter,CCard,CButton,CButtonGroup} from '@coreui/react';\r\nimport React from 'react';\r\nimport CIcon from '@coreui/icons-react'\r\nimport {API} from '../../config'\r\n\r\nimport MainChartExample from '../../views/charts/ChartBarSimple'\r\nconst WidgetsDropdown = React.lazy(() => import('../../views/widgets/WidgetsDropdown.js'))\r\nconst WidgetsBrand = React.lazy(() => import('../../views/widgets/WidgetsBrand.js'))\r\nconst Dashboard=()=>{\r\n    const [count,setCount]=React.useState(0);\r\n    \r\n    React.useEffect(() => {\r\n        console.log('dashboard mounted')\r\n      },[count]);\r\n    return(\r\n        <>\r\n        <WidgetsDropdown />\r\n        <CCard>\r\n        <CCardBody>\r\n          <CRow>\r\n            <CCol sm=\"5\">\r\n              <h4 id=\"traffic\" className=\"card-title mb-0\">Recent (Live feed)</h4>\r\n              <div className=\"small text-muted\">{new Date().toLocaleDateString()}</div>\r\n            </CCol>\r\n            <CCol sm=\"7\" className=\"d-none d-md-block\">\r\n              <CButton color=\"primary\" className=\"float-right\">\r\n                <CIcon name=\"cil-cloud-download\"/>\r\n              </CButton>\r\n              {/* <CButtonGroup className=\"float-right mr-3\">\r\n                {\r\n                  ['Day', 'Month', 'Year'].map(value => (\r\n                    <CButton\r\n                      color=\"outline-secondary\"\r\n                      key={value}\r\n                      className=\"mx-0\"\r\n                      active={value === 'Month'}\r\n                    >\r\n                      {value}\r\n                    </CButton>\r\n                  ))\r\n                }\r\n              </CButtonGroup> */}\r\n            </CCol>\r\n          </CRow>\r\n          <MainChartExample style={{height: '300px', marginTop: '40px'}}/>\r\n        </CCardBody>\r\n        {/* <CCardFooter>\r\n          <CRow className=\"text-center\">\r\n            <CCol md sm=\"12\" className=\"mb-sm-2 mb-0\">\r\n              <div className=\"text-muted\">Visits</div>\r\n              <strong>29.703 Users (40%)</strong>\r\n              <CProgress\r\n                className=\"progress-xs mt-2\"\r\n                precision={1}\r\n                color=\"success\"\r\n                value={40}\r\n              />\r\n            </CCol>\r\n            <CCol md sm=\"12\" className=\"mb-sm-2 mb-0 d-md-down-none\">\r\n              <div className=\"text-muted\">Unique</div>\r\n              <strong>24.093 Users (20%)</strong>\r\n              <CProgress\r\n                className=\"progress-xs mt-2\"\r\n                precision={1}\r\n                color=\"info\"\r\n                value={40}\r\n              />\r\n            </CCol>\r\n            <CCol md sm=\"12\" className=\"mb-sm-2 mb-0\">\r\n              <div className=\"text-muted\">Pageviews</div>\r\n              <strong>78.706 Views (60%)</strong>\r\n              <CProgress\r\n                className=\"progress-xs mt-2\"\r\n                precision={1}\r\n                color=\"warning\"\r\n                value={40}\r\n              />\r\n            </CCol>\r\n            <CCol md sm=\"12\" className=\"mb-sm-2 mb-0\">\r\n              <div className=\"text-muted\">New Users</div>\r\n              <strong>22.123 Users (80%)</strong>\r\n              <CProgress\r\n                className=\"progress-xs mt-2\"\r\n                precision={1}\r\n                color=\"danger\"\r\n                value={40}\r\n              />\r\n            </CCol>\r\n            <CCol md sm=\"12\" className=\"mb-sm-2 mb-0 d-md-down-none\">\r\n              <div className=\"text-muted\">Bounce Rate</div>\r\n              <strong>Average Rate (40.15%)</strong>\r\n              <CProgress\r\n                className=\"progress-xs mt-2\"\r\n                precision={1}\r\n                value={40}\r\n              />\r\n            </CCol>\r\n          </CRow>\r\n        </CCardFooter> */}\r\n      </CCard>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard;"],"sourceRoot":""}