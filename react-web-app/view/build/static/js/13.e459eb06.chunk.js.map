{"version":3,"sources":["components/badges/Badges.js"],"names":["Badges","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","React","useState","open","setOpen","handleClose","age","setAge","badgeList","setBadgeList","useEffect","PUBLIC_API","get","then","res","data","success","index","length","element","push","id","nfc_number","created_at","user","first_name","md","className","class","type","placeholder","color","variant","items","fields","key","_style","width","_classes","label","sorter","filter","primary","hover","striped","bordered","columnFilter","size","itemsPerPage","pagination","scopedSlots","Action","item","onClick","swal","name","onClose","required","defaultValue","labelId","value","onChange","event","target"],"mappings":"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","file":"static/js/13.e459eb06.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./badges.css\";\r\nimport { CIcon } from \"@coreui/icons-react\";\r\nimport {\r\n  CForm,\r\n  CInput,\r\n  CCard,\r\n  CRow,\r\n  CCol,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CDataTable,\r\n  CContainer,\r\n  CButton,\r\n} from \"@coreui/react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { PUBLIC_API } from \"src/config\";\r\nimport axios from 'axios'\r\nimport swal from \"@sweetalert/with-react\";\r\nconst Badges = () => {\r\n  const useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const classes = useStyles();\r\n  const [age, setAge] = React.useState(\"\");\r\n  const [badgeList,setBadgeList] = useState([])\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n  };\r\n function showAssignModal(){\r\n   swal('Warning','This section is not available now','warning')\r\n   \r\n }\r\n  React.useEffect(()=>{\r\n    PUBLIC_API.get('employee/badge/info/').then((res)=>{\r\n      if(res.data.success == \"True\"){\r\n        var data=[];\r\n        for (let index = 0; index < res.data.data.length; index++) {\r\n            const element = res.data.data[index];\r\n            data.push({'#':index+1,id:element.id,\"Badge Number\":element.nfc_number,\"Created Date\":element.created_at,\"Assigned To\":element.user.first_name,\"Scans\":'',\"Global Scans\":\"\"});\r\n        }\r\n        setBadgeList(data);\r\n    }\r\n    })\r\n    \r\n  },[])\r\n\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol md=\"12\">\r\n          <CCard>\r\n            <CCardHeader>\r\n              <h4 className=\"table-header\">Badges</h4>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <div class=\"custom-header\">\r\n                <CForm className=\"d-flex custom-form mt-2 mb-2\">\r\n                  <CInput type=\"search\" className=\"me-2\" placeholder=\"Search\" />\r\n                  <CButton type=\"button\" color=\"primary\" variant=\"outline\">\r\n                    Search\r\n                  </CButton>\r\n                </CForm>\r\n                <CButton type=\"button\" className=\"button-primary-small\">\r\n                  Export\r\n                </CButton>\r\n              </div>\r\n\r\n              <CDataTable\r\n                items={badgeList}\r\n                fields={[\r\n                  {\r\n                    key: \"#\",\r\n                    _style: { width: \"5%\" },\r\n                    _classes: \"font-weight-bold\",\r\n                  },\r\n                  \"Badge Number\",\r\n                  \"Created Date\",\r\n                  \"Assigned To\",\r\n                  \"Scans\",\r\n                  \"Global Scans\",\r\n                  {\r\n                    key: \"Action\",\r\n                    label: \"\",\r\n                    _style: { width: \"12%\" },\r\n                    sorter: true,\r\n                    filter: false,\r\n                  },\r\n                ]}\r\n                primary\r\n                hover\r\n                striped\r\n                bordered\r\n                sorter\r\n                columnFilter\r\n                // onRowClick={(row)=>{\r\n                //     history.push({\r\n                //         pathname: '/dashboard/employees/details',\r\n                //         state: { employee: row }\r\n                //     })\r\n                // }}\r\n                size=\"sm\"\r\n                itemsPerPage={10}\r\n                pagination\r\n                scopedSlots={{\r\n                  Action: (item) => (\r\n                    <td>\r\n                      <CButton\r\n                        onClick={() => {}}\r\n                        type=\"button\"\r\n                        size=\"sm\"\r\n                        color=\"danger\"\r\n                      >\r\n                        Delete\r\n                      </CButton>{\" \"}\r\n                      <CButton\r\n                        size=\"sm\"\r\n                        type=\"button\"\r\n                        color=\"primary\"\r\n                        id=\"dropdownMenu\"\r\n                        onClick={()=>showAssignModal()}\r\n                      >\r\n                        Assign\r\n                      </CButton>\r\n                    </td>\r\n                  ),\r\n                }}\r\n              />\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n\r\n        <CCol md=\"12\" class=\"button-holder\">\r\n          <CButton className=\"button-primary assign-align\" type=\"button\">\r\n            Assign all unassigned\r\n          </CButton>\r\n          <CButton\r\n            type=\"button\"\r\n            className=\"button-primary add-align\"\r\n            id=\"dropdownMenu2\"\r\n            data-toggle=\"dropdown\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            Add New <CIcon name=\"cil-plus\" size=\"xl\"></CIcon>\r\n          </CButton>\r\n          <div class=\"dropdown\">\r\n            <div class=\"dropdown-menu mt-2\" aria-labelledby=\"dropdownMenu2\">\r\n              <button class=\"dropdown-item\" type=\"button\">\r\n                Buy New\r\n              </button>\r\n              <div class=\"dropdown-divider\"></div>\r\n              <button\r\n                type=\"button\"\r\n                class=\"dropdown-item\"\r\n                onClick={handleClickOpen}\r\n              >\r\n                Use Existing\r\n              </button>\r\n            </div>\r\n            {/* modal for form input */}\r\n            <Dialog\r\n              open={open}\r\n              onClose={handleClose}\r\n              aria-labelledby=\"form-dialog-title\"\r\n              className=\"d-block\"\r\n            >\r\n              <div className=\"modal-comp\">\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                  Use Existing Badge\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                  <form>\r\n                    <TextField\r\n                      required\r\n                      id=\"standard-required\"\r\n                      label=\"Card ID\"\r\n                      defaultValue=\"Hello World\"\r\n                      className=\"d-block\"\r\n                    />\r\n                    <FormControl className=\"w-100 mt-2\">\r\n                      <InputLabel id=\"demo-simple-select-label\">\r\n                        Product Type\r\n                      </InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={age}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <MenuItem value={10}>Product1</MenuItem>\r\n                        <MenuItem value={20}>Product2</MenuItem>\r\n                        <MenuItem value={30}>Product3</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </form>\r\n                </DialogContent>\r\n                <DialogActions className=\"justify-content-center\">\r\n                  <CButton\r\n                    onClick={handleClose}\r\n                    color=\"primary\"\r\n                    className=\"button-primary px-4 mt-2\"\r\n                  >\r\n                    Submit\r\n                  </CButton>\r\n                </DialogActions>\r\n              </div>\r\n            </Dialog>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Badges;\r\n"],"sourceRoot":""}