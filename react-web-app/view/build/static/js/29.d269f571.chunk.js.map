{"version":3,"sources":["components/officerview/scans/Scans.js"],"names":["ScanHistory","useHistory","scans","useSelector","state","data","Array","from","notifications","forEach","item","index","nfc","user","id","localStorage","getItem","push","nfc_number","first_name","last_name","Date","created_at","toLocaleDateString","toLocaleTimeString","md","items","fields","key","_style","width","_classes","label","sorter","filter","light","hover","striped","bordered","columnFilter","size","itemsPerPage","pagination","scopedSlots","onClick","swal","content","buttons","type","color"],"mappings":"2HAAA,6EAiFeA,UAxEI,WACDC,cAAd,IACMC,EAAQC,aAAY,SAAAC,GACtB,IAAIC,EAAM,GAMV,OALAC,MAAMC,KAAKH,EAAMI,cAAcH,MAAMI,SAAQ,SAACC,EAAKC,GAC5CD,EAAKE,IAAIC,KAAKC,IAAMC,aAAaC,QAAQ,YACxCX,EAAKY,KAAK,CAAC,IAAIN,EAAM,EAAE,QAAUD,EAAKE,IAAIC,KAAKC,GAAG,eAAeJ,EAAKE,IAAIM,WAAW,cAAcR,EAAKE,IAAIC,KAAKM,WAAW,IAAIT,EAAKE,IAAIC,KAAKO,UAAU,gBAAgB,IAAIC,KAAKX,EAAKE,IAAIU,YAAYC,qBAAqB,cAAc,IAAIF,KAAKX,EAAKY,YAAYE,qBAAqB,MAAM,IAAIH,KAAKX,EAAKY,YAAYC,0BAGzTlB,KAQX,OACI,mCACA,cAAC,IAAD,UACA,cAAC,IAAD,UACI,cAAC,IAAD,CAAMoB,GAAG,KAAT,SACI,eAAC,IAAD,WACI,cAAC,IAAD,UACI,yCAEJ,cAAC,IAAD,UACI,cAAC,IAAD,CACAC,MAAOxB,EACPyB,OAAQ,CACJ,CAAEC,IAAK,IAAIC,OAAQ,CAAEC,MAAO,MAAQC,SAAU,oBAC9C,eAAe,cAAc,gBAAgB,QAAQ,eAAe,CAAEH,IAAK,cAAcC,OAAQ,CAAEC,MAAO,QAAS,CAACF,IAAI,SAASI,MAAM,GAAGH,OAAQ,CAAEC,MAAO,OAAQG,QAAO,EAAMC,QAAO,IAE3LC,OAAK,EACLC,OAAK,EACLC,SAAO,EACPC,UAAQ,EACRL,QAAM,EACNM,cAAY,EAQZC,KAAK,KACLC,aAAc,GACdC,YAAU,EACVC,YAAe,CACX,OACA,SAACjC,GAAD,OACI,6BACI,cAAC,IAAD,UACI,cAAC,IAAD,CAASkC,QAAS,WA3CtD,IAAyBvC,IA2CkDK,EA1CvEmC,IAAK,CACHC,QAAS,cAAC,IAAD,CAAazC,KAAMA,IAC5B0C,QAAU,EAAC,EAAM,YAwC4DP,KAAK,KAAKQ,KAAK,SAASC,MAAM,UAA7E,mCAOpB,cAAC,IAAD","file":"static/js/29.d269f571.chunk.js","sourcesContent":["import React from 'react'\r\nimport {\r\n    CContainer,\r\n    CCardHeader,CCardBody,CCard,CBadge,CButton,CCardFooter,CDataTable,CRow,CCol\r\n  } from '@coreui/react'\r\nimport { useSelector } from 'react-redux'\r\nimport swal from '@sweetalert/with-react'\r\nimport CardSwipped from '../../swipe/CardSwipped'\r\nimport { useHistory } from 'react-router'\r\nconst ScanHistory =()=>{\r\n    let history = useHistory()\r\n    const scans = useSelector(state => {\r\n        let data =[]\r\n        Array.from(state.notifications.data).forEach((item,index)=>{\r\n            if(item.nfc.user.id == localStorage.getItem('user_id')){\r\n                data.push({\"#\":index+1,'user_id':item.nfc.user.id,\"Badge Number\":item.nfc.nfc_number,\"Assigned To\":item.nfc.user.first_name+' '+item.nfc.user.last_name,\"Assigned Date\":new Date(item.nfc.created_at).toLocaleDateString(),'Time & Date':new Date(item.created_at).toLocaleTimeString()+' - '+new Date(item.created_at).toLocaleDateString()})\r\n            }\r\n        })\r\n        return data\r\n    })\r\n    function show_scan_modal(data){\r\n        swal({\r\n          content:(<CardSwipped data={data}/>),\r\n          buttons : [false,'Close']\r\n        })\r\n      }\r\n    return(\r\n        <>\r\n        <CContainer>\r\n        <CRow>\r\n            <CCol md=\"12\">\r\n                <CCard>\r\n                    <CCardHeader>\r\n                        <h3>Scans</h3>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                        <CDataTable\r\n                        items={scans}\r\n                        fields={[\r\n                            { key: '#',_style: { width: '5%' }, _classes: 'font-weight-bold' },\r\n                            'Badge Number','Assigned To','Assigned Date','Scans','Global Scans',{ key: 'Time & Date',_style: { width: '25%' }},{key:'Action',label:'',_style: { width: '12%' },sorter:false,filter:false}\r\n                        ]}\r\n                        light\r\n                        hover\r\n                        striped\r\n                        bordered\r\n                        sorter\r\n                        columnFilter\r\n                        // clickableRows\r\n                        // onRowClick={(row)=>{\r\n                        //     history.push({\r\n                        //         pathname: '/dashboard/employees/details',\r\n                        //         state: { employee: row }\r\n                        //     })\r\n                        // }}\r\n                        size=\"sm\"\r\n                        itemsPerPage={10}\r\n                        pagination\r\n                        scopedSlots = {{\r\n                            'Action':\r\n                            (item)=>(\r\n                                <td>\r\n                                    <CBadge>\r\n                                        <CButton onClick={()=>{show_scan_modal(item)}} size=\"sm\" type=\"button\" color=\"primary\">View detail</CButton>\r\n                                    </CBadge>\r\n                                </td>\r\n                            )\r\n                        }}\r\n                        />\r\n                    </CCardBody>\r\n                    <CCardFooter>\r\n                        \r\n                    </CCardFooter>\r\n                </CCard>\r\n            </CCol>\r\n        </CRow>\r\n        </CContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ScanHistory"],"sourceRoot":""}