{"version":3,"sources":["views/charts/ChartBarSimple.js","components/dashboard/Dashboard.js"],"names":["ChartBarSimple","props","backgroundColor","pointHoverBackgroundColor","dataPoints","label","attributes","pointed","defaultDatasets","data","getColor","barPercentage","categoryPercentage","defaultOptions","maintainAspectRatio","legend","display","scales","xAxes","yAxes","datasets","options","labels","defaultProps","WidgetsDropdown","React","lazy","Dashboard","useState","count","setData","useEffect","console","log","PUBLIC_API","get","then","res","activeTab","variant","className","sm","id","Date","toLocaleDateString","color","name","style","height","marginTop","type","placeholder","items","Name","Email","fields","key","_style","width","_classes","light","hover","striped","bordered","sorter","columnFilter","size","itemsPerPage","pagination"],"mappings":"iQAKMA,EAAiB,SAAAC,GAErB,IACEC,EAMED,EANFC,gBACAC,EAKEF,EALFE,0BACAC,EAIEH,EAJFG,WACAC,EAGEJ,EAHFI,MAEGC,GACDL,EAFFM,QALF,YAOIN,EAPJ,IASMO,EACG,CACL,CACEC,KAAML,EACNF,gBAAiBQ,mBAASR,GAC1BC,0BAA2BO,mBAASP,GACpCE,MAAOA,EACPM,cAAe,GACfC,mBAAoB,IAKpBC,EACG,CACLC,qBAAqB,EACrBC,OAAQ,CACNC,SAAS,GAEXC,OAAQ,CACNC,MAAO,CAAC,CACNF,SAAS,IAEXG,MAAO,CAAC,CACNH,SAAS,MAOjB,OACE,cAAC,IAAD,2BACMV,GADN,IAEEc,SAAUZ,EACVa,QAASR,EACTS,OAAQjB,MAgBdL,EAAeuB,aAAe,CAC5BrB,gBAAiB,iBACjBE,WAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzDC,MAAO,SAGML,O,gJCjDTwB,EAAkBC,IAAMC,MAAK,kBACjC,kCA0HaC,UArHG,WAChB,MAA0BF,IAAMG,SAAS,GAAzC,mBAAOC,EAAP,KACA,GADA,KACqBD,mBAAS,KAA9B,mBAAOnB,EAAP,KAAYqB,EAAZ,KAYA,OAPAL,IAAMM,WAAU,WACdC,QAAQC,IAAI,qBACZC,IAAWC,IAAI,mBAAmBC,MAAK,SAACC,GACtCL,QAAQC,IAAII,EAAI5B,MAChBqB,EAAQO,EAAI5B,KAAKA,WAElB,CAACoB,IAEF,mCAEC,eAAC,IAAD,CAAOS,UAAU,QAAjB,UACA,eAAC,IAAD,CAAMC,QAAQ,OAAOC,UAAU,YAA/B,UACG,cAAC,IAAD,UACE,cAAC,IAAD,CAAU,WAAS,QAAQA,UAAU,UAArC,0BAIF,cAAC,IAAD,UACE,cAAC,IAAD,CAAU,WAAS,SAASA,UAAU,UAAtC,yBAKF,eAAC,IAAD,WACA,eAAC,IAAD,CAAU,WAAS,QAAnB,UACE,cAAChB,EAAD,CAAiBf,KAAMA,IACvB,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAMgC,GAAG,IAAT,UACE,oBAAIC,GAAG,UAAUF,UAAU,kBAA3B,gCAGA,qBAAKA,UAAU,mBAAf,UACG,IAAIG,MAAOC,0BAGhB,cAAC,IAAD,CAAMH,GAAG,IAAID,UAAU,oBAAvB,SACE,cAAC,IAAD,CAASK,MAAM,UAAUL,UAAU,cAAnC,SACE,cAAC,IAAD,CAAOM,KAAK,8BAkBlB,cAAC,IAAD,CACEC,MAAO,CAAEC,OAAQ,QAASC,UAAW,kBAK3C,eAAC,IAAD,CAAU,WAAS,SAAnB,UACA,oBAAIT,UAAU,iCAAd,qBACA,eAAC,IAAD,CAAOA,UAAU,0BAAjB,UACI,cAAC,IAAD,CACEU,KAAK,SACLV,UAAU,OACVW,YAAY,WAEd,cAAC,IAAD,CAASD,KAAK,SAASL,MAAM,UAAUN,QAAQ,UAA/C,uBAIF,cAAC,IAAD,CAAOC,UAAU,OAAjB,SACA,cAAC,IAAD,UACA,cAAC,IAAD,CACIY,MAlFI,CAChB,CAACV,GAAG,EAAEW,KAAK,OAAOC,MAAM,cACxB,CAACZ,GAAG,EAAEW,KAAM,OAAOC,MAAM,eAiFbC,OAAQ,CACJ,CAAEC,IAAK,IAAIC,OAAQ,CAAEC,MAAO,MAAQC,SAAU,oBAC9C,gBAAgB,eAAe,SAAS,WAAW,QAEvDC,OAAK,EACLC,OAAK,EACLC,SAAO,EACPC,UAAQ,EACRC,QAAM,EACNC,cAAY,EAQZC,KAAK,KACLC,aAAc,GACdC,YAAU","file":"static/js/4.48c2e76b.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { getColor } from '@coreui/utils'\r\nimport { CChartBar } from '@coreui/react-chartjs'\r\n\r\nconst ChartBarSimple = props => {\r\n\r\n  const {\r\n    backgroundColor,\r\n    pointHoverBackgroundColor,\r\n    dataPoints,\r\n    label,\r\n    pointed,\r\n    ...attributes\r\n  } = props\r\n\r\n  const defaultDatasets = (()=>{\r\n    return [\r\n      {\r\n        data: dataPoints,\r\n        backgroundColor: getColor(backgroundColor),\r\n        pointHoverBackgroundColor: getColor(pointHoverBackgroundColor),\r\n        label: label,\r\n        barPercentage: 0.5,\r\n        categoryPercentage: 1\r\n      }\r\n    ]\r\n  })()\r\n\r\n  const defaultOptions = (()=>{\r\n    return {\r\n      maintainAspectRatio: false,\r\n      legend: {\r\n        display: false\r\n      },\r\n      scales: {\r\n        xAxes: [{\r\n          display: false\r\n        }],\r\n        yAxes: [{\r\n          display: false\r\n        }]\r\n      }\r\n    }\r\n  })()\r\n\r\n  // render\r\n  return (\r\n    <CChartBar\r\n      {...attributes}\r\n      datasets={defaultDatasets}\r\n      options={defaultOptions}\r\n      labels={label}\r\n    />\r\n  )\r\n}\r\n\r\nChartBarSimple.propTypes = {\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string,\r\n  //\r\n  backgroundColor: PropTypes.string,\r\n  pointHoverBackgroundColor: PropTypes.string,\r\n  dataPoints: PropTypes.array,\r\n  label: PropTypes.string,\r\n  pointed: PropTypes.bool\r\n};\r\n\r\nChartBarSimple.defaultProps = {\r\n  backgroundColor: 'rgba(0,0,0,.2)',\r\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\r\n  label: 'Sales'\r\n};\r\n\r\nexport default ChartBarSimple\r\n","import {\r\n  CCol,\r\n  CRow,\r\n  CTabs,\r\n  CNav,\r\n  CNavLink,\r\n  CNavItem,\r\n  CTabContent,\r\n  CTabPane,\r\n  CProgress,\r\n  CInput,\r\n  CCardBody,\r\n  CForm,\r\n  CCard,\r\n  CButton,\r\n  CButtonGroup,\r\n  CBadge,\r\n  CDataTable\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport { API, PUBLIC_API } from \"../../config\";\r\n\r\nimport MainChartExample from \"../../views/charts/ChartBarSimple\";\r\nimport './Dashboard.css'\r\nconst WidgetsDropdown = React.lazy(() =>\r\n  import(\"../../views/widgets/WidgetsDropdown.js\")\r\n);\r\nconst WidgetsBrand = React.lazy(() =>\r\n  import(\"../../views/widgets/WidgetsBrand.js\")\r\n);\r\nconst Dashboard = () => {\r\n  const [count, setCount] = React.useState(0);\r\n  const [data,setData]=useState({})\r\n  const reviewList =[\r\n    {id:1,Name:'Mr X',Email:'x@mail.com'},\r\n    {id:2,Name: 'Mr Y',Email:'y@mail.com'}\r\n]\r\n  React.useEffect(() => {\r\n    console.log(\"dashboard mounted\");\r\n    PUBLIC_API.get(\"dashboard/info/\").then((res)=>{\r\n      console.log(res.data)\r\n      setData(res.data.data)\r\n    })\r\n  }, [count]);\r\n  return (\r\n    <>\r\n    {/**tab panes */}\r\n     <CTabs activeTab=\"quick\">\r\n     <CNav variant=\"tabs\" className=\"tab-style\">\r\n        <CNavItem>\r\n          <CNavLink data-tab=\"quick\" className=\"special\">\r\n            Quick Look\r\n          </CNavLink>\r\n        </CNavItem>\r\n        <CNavItem>\r\n          <CNavLink data-tab=\"search\" className=\"special\">\r\n            Search\r\n          </CNavLink>\r\n        </CNavItem>\r\n        </CNav>\r\n        <CTabContent>\r\n        <CTabPane data-tab=\"quick\">\r\n          <WidgetsDropdown data={data}/>\r\n          <CCard>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol sm=\"5\">\r\n                  <h4 id=\"traffic\" className=\"card-title mb-0\">\r\n                    Recent (Live feed)\r\n                  </h4>\r\n                  <div className=\"small text-muted\">\r\n                    {new Date().toLocaleDateString()}\r\n                  </div>\r\n                </CCol>\r\n                <CCol sm=\"7\" className=\"d-none d-md-block\">\r\n                  <CButton color=\"primary\" className=\"float-right\">\r\n                    <CIcon name=\"cil-cloud-download\" />\r\n                  </CButton>\r\n                  {/* <CButtonGroup className=\"float-right mr-3\">\r\n                {\r\n                  ['Day', 'Month', 'Year'].map(value => (\r\n                    <CButton\r\n                      color=\"outline-secondary\"\r\n                      key={value}\r\n                      className=\"mx-0\"\r\n                      active={value === 'Month'}\r\n                    >\r\n                      {value}\r\n                    </CButton>\r\n                  ))\r\n                }\r\n              </CButtonGroup> */}\r\n                </CCol>\r\n              </CRow>\r\n              <MainChartExample\r\n                style={{ height: \"300px\", marginTop: \"40px\" }}\r\n              />\r\n            </CCardBody>\r\n          </CCard>\r\n          </CTabPane>\r\n          <CTabPane data-tab=\"search\">\r\n          <h4 className=\"table-header mt-3 text-center \">Ratings</h4>\r\n          <CForm className=\"d-flex custom-form mt-2\">\r\n              <CInput\r\n                type=\"search\"\r\n                className=\"me-2\"\r\n                placeholder=\"Search\"\r\n              />\r\n              <CButton type=\"submit\" color=\"primary\" variant=\"outline\">\r\n                Search\r\n              </CButton>\r\n            </CForm>\r\n            <CCard className=\"mt-2\">\r\n            <CCardBody>\r\n            <CDataTable\r\n                items={reviewList}\r\n                fields={[\r\n                    { key: '#',_style: { width: '5%' }, _classes: 'font-weight-bold' },\r\n                    'Employee Name','Badge Number','Rating','Feedback','Date'\r\n                ]}\r\n                light\r\n                hover\r\n                striped\r\n                bordered\r\n                sorter\r\n                columnFilter\r\n                // clickableRows\r\n                // onRowClick={(row)=>{\r\n                //     history.push({\r\n                //         pathname: '/dashboard/employees/details',\r\n                //         state: { employee: row }\r\n                //     })\r\n                // }}\r\n                size=\"sm\"\r\n                itemsPerPage={10}\r\n                pagination\r\n              \r\n              /> \r\n              </CCardBody>    \r\n            </CCard>\r\n          </CTabPane>\r\n      </CTabContent>\r\n      </CTabs>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"sourceRoot":""}