{"version":3,"sources":["components/employees/EmployeeDetails.js"],"names":["EmployeeDetails","location","useLocation","history","useHistory","useState","count","setCount","inputFile","useRef","avatar","setAvatar","image","setImage","user_data","setUserData","email","setEmail","username","setUsername","first_name","setFirstName","last_name","setLastName","phone","setPhone","registration","setRegistration","address","setAddress","designation","setDesignation","React","useEffect","undefined","state","PUBLIC_API","get","employee","id","then","res","console","log","data","success","BASE_URL","profile_pic","className","md","onClick","current","click","style","height","width","cursor","shape","src","type","ref","display","onChange","event","file","target","files","URL","createObjectURL","value","placeholder","autoComplete","color","formData","FormData","append","FILE_API","post","swal","catch","err","response","update_profile","push"],"mappings":"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","file":"static/js/22.348ecdb7.chunk.js","sourcesContent":["import React,{useState,useRef} from 'react'\r\nimport { CCard, CRow,CCol,CCardBody,CCardFooter,CCardHeader,CForm,CTextarea,CInputGroupText,CInput,CInputGroup,CInputGroupPrepend,CButton,CImg } from '@coreui/react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport CIcon from \"@coreui/icons-react\"\r\nimport { BASE_URL, FILE_API, PUBLIC_API } from 'src/config'\r\nimport swal from 'sweetalert'\r\nconst EmployeeDetails =()=>{\r\n    let location = useLocation()\r\n    let history = useHistory()\r\n    const [count,setCount] = useState(0)\r\n    const inputFile = useRef(null) \r\n    const [avatar,setAvatar] = useState()\r\n    const [image,setImage]=useState()\r\n    const [user_data,setUserData] = useState(null)\r\n    const [email,setEmail] = useState('')\r\n    const [username,setUsername]=useState('')\r\n    const [first_name,setFirstName]=useState('')\r\n    const [last_name,setLastName] = useState('')\r\n    const [phone,setPhone] = useState('')\r\n    const [registration,setRegistration] = useState('')\r\n    const [address,setAddress] = useState('')\r\n    const [designation,setDesignation] = useState(\"\")\r\n    const checkProp =()=>{\r\n        console.log(location.state)\r\n        if(location.state.employee == undefined){\r\n            history.push('/dashboard/employees')\r\n        }\r\n    }\r\n    function onImageChange(file){\r\n        setImage(file)\r\n        setAvatar(URL.createObjectURL(file))\r\n        //update_profile()\r\n    }\r\n    const onButtonClick = () => {\r\n        // `current` points to the mounted file input element\r\n       inputFile.current.click();\r\n    };\r\n    function update_profile(){\r\n        var formData = new FormData();\r\n        formData.append(\"username\", username);\r\n        formData.append(\"first_name\", first_name); // number 123456 is immediately converted to a string \"123456\"\r\n        formData.append(\"last_name\", last_name);\r\n        formData.append(\"phone\", phone);\r\n        formData.append(\"email\", email);\r\n        formData.append(\"address\", address);\r\n        formData.append(\"registration\", registration);\r\n        formData.append(\"designation\", designation);\r\n        // HTML file input, chosen by user\r\n        if(image!=undefined){\r\n            formData.append(\"profile_pic\", image);\r\n        }\r\n        FILE_API.post('employee/profile/update/'+location.state.employee.id+'/',formData).then((res)=>{\r\n            console.log('update result ---- ',res.data)\r\n            if(res.data.success==\"True\"){\r\n                swal('Updated','Profile updated successfully','success')\r\n            }\r\n        }).catch((err)=>{\r\n            console.log('err -- ',err.response)\r\n        })\r\n    }\r\n    React.useEffect(()=>{\r\n        if(location.state!=undefined){\r\n            PUBLIC_API.get(\"profile/details/\"+location.state.employee.id+\"/\").then((res)=>{\r\n                console.log('res --- ',res.data)\r\n                if(res.data.success == \"True\"){\r\n                    setAvatar(BASE_URL+res.data.data.profile_pic)\r\n                    setUserData(res.data.data)\r\n                    setEmail(res.data.data.email)\r\n                    setUsername(res.data.data.username)\r\n                    setFirstName(res.data.data.first_name)\r\n                    setLastName(res.data.data.last_name)\r\n                    setPhone(res.data.data.phone)\r\n                    setRegistration(res.data.data.registration)\r\n                    setAddress(res.data.data.address)\r\n                }\r\n            })\r\n        }\r\n        setCount(1)\r\n    },[count])\r\n    return(\r\n        <>\r\n        {location.state ? \r\n        <CRow className=\"justify-content-center\">\r\n            <CCol md=\"8\">\r\n                {user_data!=null && <CCard>\r\n                    <CCardHeader>\r\n                        <h3>Details of <strong>{user_data.first_name+' '+user_data.last_name}</strong></h3>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                            <CRow className=\"justify-content-center\">\r\n                                <CImg onClick={onButtonClick} className=\"mx-auto\" style={{height:\"100px\",width:\"116px\",cursor:\"pointer\"}} shape=\"rounded\" src={avatar} />\r\n                            </CRow>\r\n                            <hr/>\r\n                            <CRow className=\"justify-content-center\">\r\n                                <input type='file' id='file' ref={inputFile} style={{display: 'none'}} onChange={(event)=>onImageChange(event.target.files[0])}/>\r\n                                {/* <CButton type=\"button\" onClick={onButtonClick}>change</CButton> */}\r\n                            </CRow>\r\n                            <CInputGroup className=\"mb-3\">\r\n                                <CInputGroupPrepend>\r\n                                    <CInputGroupText>\r\n                                    First Name\r\n                                    </CInputGroupText>\r\n                                </CInputGroupPrepend>\r\n                                <CInput value={first_name} onChange={(event)=>setFirstName(event.target.value)} type=\"text\" placeholder=\"First Name\" autoComplete=\"first_name\" />\r\n                            </CInputGroup>\r\n                            <CInputGroup className=\"mb-3\">\r\n                                <CInputGroupPrepend>\r\n                                    <CInputGroupText>\r\n                                    Last Name\r\n                                    </CInputGroupText>\r\n                                </CInputGroupPrepend>\r\n                                <CInput value={last_name} onChange={(event)=>setLastName(event.target.value)} type=\"text\" placeholder=\"Last Name\" autoComplete=\"last_name\" />\r\n                            </CInputGroup>\r\n                            <CInputGroup className=\"mb-3\">\r\n                                <CInputGroupPrepend>\r\n                                    <CInputGroupText>\r\n                                    Email\r\n                                    </CInputGroupText>\r\n                                </CInputGroupPrepend>\r\n                                <CInput value={email} onChange={(event)=>setEmail(event.target.value)} type=\"email\" placeholder=\"Email\" autoComplete=\"email\" />\r\n                            </CInputGroup>\r\n                            <CInputGroup className=\"mb-4\">\r\n                                <CInputGroupPrepend>\r\n                                    <CInputGroupText>\r\n                                    Phone\r\n                                    </CInputGroupText>\r\n                                </CInputGroupPrepend>\r\n                                <CInput type=\"text\" placeholder=\"Phone\" value={phone} onChange={(event)=>setPhone(event.target.value)}  />\r\n                            </CInputGroup>\r\n                            <CInputGroup className=\"mb-4\">\r\n                                <CInputGroupPrepend>\r\n                                    <CInputGroupText>\r\n                                    Registration\r\n                                    </CInputGroupText>\r\n                                </CInputGroupPrepend>\r\n                                <CInput type=\"text\" placeholder=\"mac\" autoComplete=\"mac\" value={registration} onChange={(event)=>setRegistration(event.target.value)}  />\r\n                            </CInputGroup>\r\n                            <CInputGroup className=\"mb-4\">\r\n                                <CInputGroupPrepend>\r\n                                    <CInputGroupText>\r\n                                    Designation\r\n                                    </CInputGroupText>\r\n                                </CInputGroupPrepend>\r\n                                <CInput type=\"text\" placeholder=\"mac\" autoComplete=\"mac\" value={designation} onChange={(event)=>setDesignation(event.target.value)}  />\r\n                            </CInputGroup>\r\n                            <CInputGroup className=\"mb-4\">\r\n                                <CInputGroupPrepend>\r\n                                    <CInputGroupText>\r\n                                    Address\r\n                                    </CInputGroupText>\r\n                                </CInputGroupPrepend>\r\n                                <CTextarea type=\"text\" placeholder=\"Phone\" value={address} onChange={(event)=>setAddress(event.target.value)} />\r\n                            </CInputGroup>\r\n                            {/* <CRow>\r\n                                <CCol xs=\"12\" md=\"12\">\r\n                                    \r\n                                </CCol>\r\n                            </CRow> */}\r\n                    </CCardBody>\r\n                    <CCardFooter>\r\n                        <CButton color=\"primary\" className=\"px-4\" type=\"button\" onClick={()=>update_profile()}>Update</CButton>\r\n                    </CCardFooter>\r\n                </CCard>}\r\n            </CCol>\r\n        </CRow>:history.push('/dashboard/employees')}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EmployeeDetails"],"sourceRoot":""}