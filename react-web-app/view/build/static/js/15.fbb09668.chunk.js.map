{"version":3,"sources":["views/charts/ChartBarSimple.js","components/officerview/officer-dashboard/OfficerDashboard.js"],"names":["ChartBarSimple","props","backgroundColor","pointHoverBackgroundColor","dataPoints","label","attributes","pointed","defaultDatasets","data","getColor","barPercentage","categoryPercentage","defaultOptions","maintainAspectRatio","legend","display","scales","xAxes","yAxes","datasets","options","labels","defaultProps","Dashboard","history","useHistory","useSelector","state","dashboard","useState","positiveRatingModalData","setPositiveRatingMOdalData","negativeRatingModalData","setNegativeRatingMOdalData","officer_notifications","user_id","localStorage","getItem","Array","from","notifications","forEach","item","index","nfc","user","id","push","ratings","review_type","officer","negativeRatings","dispatch","rate","first_name","last_name","nfc_number","Number","star","comment","Date","created_at","toLocaleDateString","toLocaleTimeString","useDispatch","showPositiveRating","setShowPositiveRating","showNegativeRating","setShowNegativeRating","React","useEffect","fetchDashboardData","fetchNotificationsThunk","fetchRatingsThunk","show","onClose","centered","closeButton","className","name","icon","src","BASE_URL","profile_pic","alt","class","designation","editing","emptyStarColor","starCount","value","color","type","sm","lg","header","String","length","text","md","undefined","slice","map","rating","xs","onClick","console","log","handle_positive_modal","handle_negative_modal","status","notification","swal","content","buttons","show_scan_modal","lat","lng","variant","style","height","marginTop"],"mappings":"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","file":"static/js/15.fbb09668.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { getColor } from '@coreui/utils'\r\nimport { CChartBar } from '@coreui/react-chartjs'\r\n\r\nconst ChartBarSimple = props => {\r\n\r\n  const {\r\n    backgroundColor,\r\n    pointHoverBackgroundColor,\r\n    dataPoints,\r\n    label,\r\n    pointed,\r\n    ...attributes\r\n  } = props\r\n\r\n  const defaultDatasets = (()=>{\r\n    return [\r\n      {\r\n        data: dataPoints,\r\n        backgroundColor: getColor(backgroundColor),\r\n        pointHoverBackgroundColor: getColor(pointHoverBackgroundColor),\r\n        label: label,\r\n        barPercentage: 0.5,\r\n        categoryPercentage: 1\r\n      }\r\n    ]\r\n  })()\r\n\r\n  const defaultOptions = (()=>{\r\n    return {\r\n      maintainAspectRatio: false,\r\n      legend: {\r\n        display: false\r\n      },\r\n      scales: {\r\n        xAxes: [{\r\n          display: false\r\n        }],\r\n        yAxes: [{\r\n          display: false\r\n        }]\r\n      }\r\n    }\r\n  })()\r\n\r\n  // render\r\n  return (\r\n    <CChartBar\r\n      {...attributes}\r\n      datasets={defaultDatasets}\r\n      options={defaultOptions}\r\n      labels={label}\r\n    />\r\n  )\r\n}\r\n\r\nChartBarSimple.propTypes = {\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string,\r\n  //\r\n  backgroundColor: PropTypes.string,\r\n  pointHoverBackgroundColor: PropTypes.string,\r\n  dataPoints: PropTypes.array,\r\n  label: PropTypes.string,\r\n  pointed: PropTypes.bool\r\n};\r\n\r\nChartBarSimple.defaultProps = {\r\n  backgroundColor: 'rgba(0,0,0,.2)',\r\n  dataPoints: [10, 22, 34, 46, 89,56],\r\n  label: 'Count'\r\n};\r\n\r\nexport default ChartBarSimple\r\n","import {\r\n    CCol,\r\n    CRow,\r\n    CWidgetDropdown,\r\n    CCardBody,\r\n    CCard,\r\n    CButton,\r\n    CBadge, CModal, CModalBody,CModalHeader,\r\n    CImg, CContainer\r\n} from \"@coreui/react\";\r\nimport StarRatingComponent from \"react-star-rating-component\";\r\nimport React,{useState} from \"react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport { fetchDashboardData } from \"src/store/slices/DashboardSlice\";\r\nimport MainChartExample from \"../../../views/charts/ChartBarSimple\";\r\nimport \"./Dashboard.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchNotificationsThunk } from \"src/store/slices/NotificationSlice\";\r\nimport { fetchRatingsThunk } from \"src/store/slices/RatingSlice\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { BASE_URL } from \"src/config\";\r\nimport swal from '@sweetalert/with-react'\r\nimport CardSwipped from \"src/components/swipe/CardSwipped\";\r\n\r\nconst WidgetsDropdown = React.lazy(() =>\r\n    import(\"../../../views/widgets/WidgetsDropdown.js\")\r\n);\r\n\r\nconst Dashboard = () => {\r\n    let history = useHistory()\r\n    const data = useSelector(state => state.dashboard);\r\n    const [positiveRatingModalData, setPositiveRatingMOdalData] = useState()\r\n    const [negativeRatingModalData, setNegativeRatingMOdalData] = useState()\r\n    const officer_notifications = useSelector(state => {\r\n        let data = []\r\n        let user_id = localStorage.getItem('user_id')\r\n        Array.from(state.notifications.data).forEach((item, index) => {\r\n            if (item.nfc.user.id == user_id) {\r\n                data.push(item)\r\n            }\r\n        })\r\n        return data\r\n    })\r\n    const toggle1 = () => {\r\n        setShowPositiveRating(!showPositiveRating);\r\n    }\r\n    const toggle2 = () => {\r\n        setShowNegativeRating(!showNegativeRating);\r\n    }\r\n    const notifications = useSelector(state => state.notifications)\r\n    const ratings = useSelector(state => {\r\n        let data = []\r\n        Array.from(state.ratings.data).forEach((item, index) => {\r\n            if (item.review_type == 1 && item.officer.id == localStorage.getItem('user_id')) {\r\n                data.push(item)\r\n            }\r\n        })\r\n        return data\r\n    })\r\n    const negativeRatings = useSelector(state => {\r\n        let data = []\r\n        Array.from(state.ratings.data).forEach((item, index) => {\r\n            if (item.review_type == 2 && item.officer.id == localStorage.getItem('user_id')) {\r\n                data.push(item)\r\n            }\r\n        })\r\n        return data\r\n    })\r\n    const ratingsTableData = useSelector(state => {\r\n        let data = []\r\n        state.ratings.data.forEach((rate, index) => {\r\n            if (rate.officer.id == localStorage.getItem('user_id')) {\r\n                data.push({ '#': index + 1, 'Employee Name': rate.officer.first_name + ' ' + rate.officer.last_name, 'Badge Number': rate.officer.user_id[0].nfc_number, 'Rating': Number(rate.star), 'Feedback': rate.comment, 'Date': new Date(rate.created_at).toLocaleDateString() + ' ' + new Date(rate.created_at).toLocaleTimeString() })\r\n            }\r\n        })\r\n        return data\r\n    })\r\n    const dispatch = useDispatch()\r\n    function handle_positive_modal(data) {\r\n        console.log('pos rating  data', data)\r\n        //new Promise(setPositiveRatingMOdalData(data)), resolve).then(() => { console.log('state:', this.state) })\r\n        setPositiveRatingMOdalData(data)\r\n        setShowPositiveRating(true)\r\n    }\r\n    const [showPositiveRating, setShowPositiveRating] = useState(false)\r\n    const [showNegativeRating, setShowNegativeRating] = useState(false)\r\n    function handle_negative_modal(data) {\r\n        console.log('neg rating view')\r\n        setNegativeRatingMOdalData(data)\r\n        setShowNegativeRating(true)\r\n    }\r\n    React.useEffect(() => {\r\n        dispatch(fetchDashboardData())\r\n        dispatch(fetchNotificationsThunk())\r\n        dispatch(fetchRatingsThunk())\r\n    }, []);\r\n\r\n    function show_scan_modal(data) {\r\n        swal({\r\n            content: (<CardSwipped data={data} />),\r\n            buttons: [false, 'Close']\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            {/**positive rating modal */}\r\n            <CModal show={showPositiveRating} onClose={toggle1} centered>\r\n                <CModalHeader closeButton>Rating Details</CModalHeader>\r\n                <CModalBody>\r\n                    <p className=\"time\"><CIcon name=\"cil-clock\" />{\" \"}<CIcon icon=\"cil-clock\" /><span>{new Date(positiveRatingModalData?.created_at).toLocaleTimeString() + ' - ' + new Date(positiveRatingModalData?.created_at).toLocaleDateString()}</span></p>\r\n                    <p className=\"person-name\"> <CImg\r\n                        src={BASE_URL + positiveRatingModalData?.officer.profile_pic}\r\n                        className=\"c-avatar-img officer-img mr-1 ml-0\"\r\n                        alt=''\r\n                    />{positiveRatingModalData?.officer.first_name + ' ' + positiveRatingModalData?.officer.last_name}</p>\r\n                    <p class=\"officer-designation\">Position:{positiveRatingModalData?.officer.designation}</p>\r\n                    <StarRatingComponent\r\n                        name=\"rate2\"\r\n                        editing={false}\r\n                        emptyStarColor={\"#6d706e\"}\r\n                        starCount={5}\r\n                        value={Number(positiveRatingModalData?.star)}\r\n                    />\r\n                    <p class=\"review mt-none\">Rated by:  {positiveRatingModalData?.name} </p>\r\n                    <p className=\"review-text\">{positiveRatingModalData?.comment}</p>\r\n                    <div class=\"container-fluid\">\r\n                        <h6>Attachments</h6>\r\n                        <div class=\"row mt-2\">\r\n                            <div class=\"col-md-6 col-sm-3 mt-1\">\r\n                                <img src={'assets/images/better-service.jpg'} className=\"attachment-img img-fluid\" />\r\n                            </div>\r\n                            <div class=\"col-md-6 col-sm-3 mt-1\">\r\n                                <img src={'assets/images/PDs.jpg'} className=\"attachment-img img-fluid\" />\r\n                            </div>\r\n                            <div class=\"col-md-6 col-sm-3 mt-1\">\r\n                                <img src={'assets/images/police-cap.jpg'} className=\"attachment-img img-fluid\" />\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </CModalBody>\r\n            </CModal>\r\n\r\n            {/**negative rating modal */}\r\n            <CModal show={showNegativeRating} onClose={toggle2} centered>\r\n\r\n                <CModalHeader closeButton>Rating Details</CModalHeader>\r\n                <CModalBody>\r\n                    <p className=\"time\"><CIcon name=\"cil-clock\" />{\" \"}<CIcon icon=\"cil-clock\" /><span>{new Date(negativeRatingModalData?.created_at).toLocaleTimeString() + ' - ' + new Date(negativeRatingModalData?.created_at).toLocaleDateString()}</span></p>\r\n                    <p className=\"person-name\"> <CImg\r\n                        src={BASE_URL + negativeRatingModalData?.officer.profile_pic}\r\n                        className=\"c-avatar-img officer-img mr-1 ml-0\"\r\n                        alt=''\r\n                    />{negativeRatingModalData?.officer.first_name + ' ' + negativeRatingModalData?.officer.last_name}</p>\r\n                    <p class=\"officer-designation\">Position:{negativeRatingModalData?.officer.designation}</p>\r\n                    <StarRatingComponent\r\n                        name=\"rate2\"\r\n                        editing={false}\r\n                        emptyStarColor={\"#6d706e\"}\r\n                        starCount={5}\r\n                        value={Number(negativeRatingModalData?.star)}\r\n                    />\r\n                    <p class=\"review mt-none\">Rated by:  {negativeRatingModalData?.name}</p>\r\n                    <p className=\"review-text\">{negativeRatingModalData?.comment}</p>\r\n                    <div class=\"container\">\r\n                        <h6>Attachments</h6>\r\n                        <div class=\"row mt-2\">\r\n                            <div class=\"col-md-6 col-sm-3 mt-1\">\r\n                                <img src={'assets/images/better-service.jpg'} className=\"attachment-img img-fluid\" />\r\n                            </div>\r\n                            <div class=\"col-md-6 col-sm-3 mt-1\">\r\n                                <img src={'assets/images/PDs.jpg'} className=\"attachment-img img-fluid\" />\r\n                            </div>\r\n                            <div class=\"col-md-6 col-sm-3 mt-1\">\r\n                                <img src={'assets/images/police-cap.jpg'} className=\"attachment-img img-fluid\" />\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </CModalBody>\r\n            </CModal>\r\n            <CContainer>\r\n                <CRow>\r\n                    <CCol>\r\n                        <CButton color=\"primary\" type=\"button\">Clock In</CButton>\r\n                    </CCol>\r\n                </CRow>\r\n                <hr />\r\n                <CRow className=\"mt-3\">\r\n                    <CCol sm=\"6\" lg=\"3\">\r\n                        <CWidgetDropdown className=\"pb-4\"\r\n                            color=\"gradient-primary\"\r\n                            header={String(officer_notifications.length)}\r\n                            text=\"Total Scans\"\r\n                        >\r\n                        </CWidgetDropdown>\r\n                    </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                    {/**show ratings */}\r\n                    <CCol sm=\"12\" md=\"4\" lg=\"4\">\r\n                        <h4 id=\"traffic\" className=\"card-title mb-0\">Recent Ratings (Live Feed)</h4>\r\n                        <div class=\"rating-holder mt-4\">\r\n                            <CRow>\r\n                                {ratings != undefined && Array.from(ratings.slice(0, 9)).map((rating) => (\r\n                                    <CCol xs=\"12\" sm=\"6\" md=\"12\" lg=\"10\">\r\n                                        <CCard className=\"review-cards\">\r\n                                            <CCardBody>\r\n                                                <p className=\"time\"><CIcon name=\"cil-clock\" />{\" \"}<CIcon icon=\"cil-clock\" /><span>{new Date(rating.created_at).toLocaleTimeString() + ' - ' + new Date(rating.created_at).toLocaleDateString()}</span></p>\r\n                                                <p className=\"person-name\"> <CImg\r\n                                                    src={BASE_URL + rating.officer.profile_pic}\r\n                                                    className=\"c-avatar-img officer-img mr-1 ml-0\"\r\n                                                    alt=''\r\n                                                />{rating.officer.first_name} <span class=\"officer-designation\">{rating.officer.designation}</span></p>\r\n                                                <StarRatingComponent\r\n                                                    name=\"rate2\"\r\n                                                    editing={false}\r\n                                                    emptyStarColor={\"#6d706e\"}\r\n                                                    starCount={5}\r\n                                                    value={Number(rating.star)}\r\n                                                />\r\n                                                <p class=\"review mt-none\">by {rating.name} </p>\r\n                                                <p className=\"review-text\">{'\"' + rating.comment + '\"'}</p>\r\n                                                <p><button className=\"btn-info btn\" onClick={() => handle_positive_modal(rating)}>View</button></p>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CCol>\r\n                                ))}\r\n                            </CRow>\r\n                        </div>\r\n                    </CCol>\r\n                    {/**___NEGATIVE REVIEW SHOW */}\r\n                    <CCol sm=\"12\" md=\"4\" lg=\"4\">\r\n\r\n                        <h4 id=\"traffic\" className=\"card-title negative-heading mb-0\">Negative Ratings (Live Feed)</h4>\r\n                        <div class=\"rating-holder negative mt-4\">\r\n                            <CRow>\r\n                                {negativeRatings != undefined && Array.from(negativeRatings.slice(0, 9)).map((rating) => (\r\n                                    <CCol xs=\"12\" sm=\"6\" md=\"12\" lg=\"10\">\r\n                                        <CCard className=\"review-cards border-danger\">\r\n                                            <CCardBody>\r\n                                                <p className=\"time\"><CIcon name=\"cil-clock\" />{\" \"}<span>{new Date(rating.created_at).toLocaleTimeString() + ' - ' + new Date(rating.created_at).toLocaleDateString()}</span></p>\r\n                                                <p className=\"person-name\"> <CImg\r\n                                                    src={BASE_URL + rating.officer.profile_pic}\r\n                                                    className=\"c-avatar-img officer-img mr-1 ml-0\"\r\n                                                    alt=''\r\n                                                />{rating.officer.first_name} <span class=\"officer-designation\">{rating.officer.designation}</span></p>\r\n                                                {/* <p class=\"feedback\"></p> */}\r\n                                                <StarRatingComponent\r\n                                                    name=\"rate2\"\r\n                                                    editing={false}\r\n                                                    emptyStarColor={\"#6d706e\"}\r\n                                                    starCount={5}\r\n                                                    value={Number(rating.star)}\r\n                                                />\r\n                                                <p class=\"review mt-none\">by {rating.name} </p>\r\n                                                <p className=\"review-text\">{'\"' + rating.comment + '\"'}</p>\r\n                                                <p><button className=\"btn-info btn\" onClick={() => handle_negative_modal(rating)}>View</button></p>\r\n                                                {/* <p><button className=\"btn-danger btn\">Take Action !</button></p> */}\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CCol>\r\n                                ))}\r\n                            </CRow>\r\n                        </div>\r\n\r\n                    </CCol>\r\n                    {/**latest scans show */}\r\n                    <CCol sm=\"12\" md=\"4\" lg=\"4\">\r\n                        <CCard className=\"noti-holder\">\r\n                            <CCardBody>\r\n                                <div class=\"scan-header\">\r\n                                    <h5 className=\"angle-left\">Recent Scans</h5>\r\n                                    <CButton color=\"primary\" type=\"button\" className=\"angle-right\" onClick={() => history.push('/dashboard/officer/scans/history')}>\r\n                                        {notifications.status == 'succeeded' ? 'Total' : 'loading'} <CBadge color=\"info\">{officer_notifications.length}</CBadge>\r\n                                        <span className=\"visually-hidden\">unread messages</span>\r\n                                    </CButton>\r\n                                </div>\r\n                                <div class=\"card-div mt-2 pb-1 pr-3\">\r\n                                    {officer_notifications != undefined && Array.from(officer_notifications.slice(0, 10)).map((notification) => (\r\n                                        <CCard className=\"show-scans\" onClick={() => { show_scan_modal({ user_id: notification.nfc.user.id }) }}>\r\n                                            <CCardBody>\r\n                                                <CRow>\r\n                                                    <CCol sm=\"2\">\r\n                                                        <CImg\r\n                                                            src={BASE_URL + notification.nfc.user.profile_pic}\r\n                                                            className=\"c-avatar-img officer-img mr-1 ml-0\"\r\n                                                            alt=''\r\n                                                        />\r\n                                                    </CCol>\r\n                                                    <CCol sm=\"10\">\r\n                                                        <p>Badge No: {notification.nfc.nfc_number} of {notification.nfc.user.first_name + ' ' + notification.nfc.user.last_name} was scanned at {new Date(notification.created_at).toLocaleTimeString()} on {new Date(notification.created_at).toLocaleDateString()} near Lat: {notification.nfc.user.lat} and Lng: {notification.nfc.user.lng}\r\n                                                        </p>\r\n                                                    </CCol>\r\n                                                </CRow>\r\n\r\n                                                {/* <p>\r\n                                <CIcon name=\"cil-clock\" />{\" \"}\r\n                                <span> A moment ago </span>\r\n                              </p> */}\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    ))}\r\n                                    <CButton onClick={() => history.push('/dashboard/scan-history')} className=\"ml-2\" type=\"button\" variant=\"outline\" color=\"primary\">View all</CButton>\r\n                                </div>\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                    <CCol sm=\"12\" md=\"12\" lg=\"12\">\r\n                        <CCard>\r\n                            <CCardBody>\r\n                                <CRow>\r\n                                    <CCol sm=\"5\">\r\n                                        <h4 id=\"traffic\" className=\"card-title mb-0\">\r\n                                            Ratings\r\n                                        </h4>\r\n                                        <div className=\"small text-muted\">\r\n                                            {new Date().toLocaleDateString()}\r\n                                        </div>\r\n                                    </CCol>\r\n                                    {/* <CCol sm=\"7\" className=\"d-none d-md-block\">\r\n                                        <CButton color=\"primary\" className=\"float-right\">\r\n                                            <CIcon name=\"cil-cloud-download\" />\r\n                                        </CButton>\r\n                                    </CCol> */}\r\n                                </CRow>\r\n\r\n                                <MainChartExample\r\n                                    style={{ height: \"300px\", marginTop: \"40px\" }}\r\n                                />\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    </CCol>\r\n                </CRow>\r\n            </CContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"sourceRoot":""}